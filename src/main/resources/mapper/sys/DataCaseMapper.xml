<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.zaijushou.zhx.sys.dao.DataCaseMapper">

    <sql id="detailColSql">
        DISTINCT da.id as id,
        da.case_date as caseDate,
        da.money as money,
        da.warning,
        da.case_deadline as caseDeadline,
        da.collect_hand as collectHand,
        da.rmb as rmb,
        da.hkd as hkd,
        da.foreign_currency as foreignCurrency,
        da.gender as gender,
        da.name as name,
        da.card_no as cardNo,
        da.ident_no as identNo,
        da.ident_type as identType,
        da.odv as [collectionUser.id],
        da.collection_area as [collectionArea.id],
        da.summary,
        da.collect_result as collectInfo,
        da.m_val as mVal,
        da.commission_rate as commissionRate,
        da.commission_money as commissionMoney,
        da.home_tel_number as homeTelNumber,
        da.unit_tel_number as unitTelNumber,
        da.tel as tel,
        da.unit_name as unitName,
        da.new_case as newCase,
        da.case_user_position as caseUserPosition,
        da.case_user_depart as caseUserDepart,
        da.unit_address as unitAddress,
        da.unit_zip_code as unitZipCode,
        da.home_address as homeAddress,
        da.home_zip_code as homeZipCode,
        da.statement_address as statementAddress,
        da.statement_zip_code as statementZipCode,
        da.census_register_address as censusRegisterAddress,
        da.census_register_zip_code as censusRegisterZipCode,
        da.qq as qq,
        da.email as email,
        da.remark as selfInfo,
        da.birthday as birthday,
        da.age as age,
        0 as 'province.id',
        0 as 'city.id',
        0 as 'county.id',
        da.expect_retire_case_date as expectRetireCaseDate,
        da.goods as goods,
        da.commercial_tenant as commercialTenant,
        da.archive_no as archiveNo,
        da.apply_order_no as applyOrderNo,
        da.social_security_computer_no as socialSecurityComputerNo,
        da.social_security_card_no as socialSecurityCardNo,
        da.bank as bank,
        da.account as account,
        da.account_name as accountName,
        da.card_type as cardType,
        da.principle as principle,
        da.loan_rate as loanRate,
        da.residual_principle as residualPrinciple,
        da.monthly_repayments as monthlyRepayments,
        da.minimum_payment as minimumPayment,
        da.credit_line as creditLine,
        da.fixed_quota as fixedQuota,
        da.default_level as defaultLevel,
        da.last_repay_money as lastRepayMoney,
        da.last_repay_date as lastRepayDate,
        da.last_consume_date as lastConsumeDate,
        da.last_withdraw_date as lastWithdrawDate,
        da.stop_card_date as stopCardDate,
        da.active_card_date as activeCardDate,
        da.bill_date as billDate,
        da.bill_cycle as billCycle,
        da.outstanding_amount as outstandingAmount,
        da.main_deputy_card as mainDeputyCard,
        da.deputy_card_user_name as deputyCardUserName,
        da.loan_date as loanDate,
        da.loan_deadline as loanDeadline,
        da.overdue_date as overdueDate,
        da.overdue_periods as overduePeriods,
        da.overdue_days as overdueDays,
        da.overdue_times as overdueTimes,
        da.entrust_periods as entrustPeriods,
        da.repay_deadline as repayDeadline,
        da.repaid_periods as repaidPeriods,
        da.loan_type as loanType,
        da.collection_type as collectionType,
        da.overdue_money as overdueMoney,
        da.overdue_principle as overduePrinciple,
        da.overdue_interest as overdueInterest,
        da.overdue_management_cost as overdueManagementCost,
        da.overdue_default_interest as overdueDefaultInterest,
        da.penalty as penalty,
        da.late_fee as lateFee,
        da.overrun_fee as overrunFee,
        da.bail as bail,
        da.currency_type as currencyType,
        da.last_collection_record as lastCollectionRecord,
        da.overdue_bill_time as overdueBillTime,
        da.contract_no as contractNo,
        da.over_days as overDays,
        da.dealer as dealer,
        da.apply_date as applyDate,
        da.repay_date as repayDate,
        da.policy_expiry_date as policyExpiryDate,
        da.card_price as cardPrice,
        da.card_model as cardModel,
        da.license as license,
        da.brand as brand,
        da.vin as vin,
        da.engine_no as engineNo,
        da.batch_no as batchNo,
        da.client as client,
        da.collect_area as collectArea,
        da.dept as dept,
        da.odv as odv,
        da.status as status,
        da.area as area,
        da.expect_time as expectTime,
        da.color as color,
        da.collect_status as collectStatus ,
        da.collect_date as collectDate,
        da.account_age as accountAge ,
        da.seq_no as seqNo,
        da.real_repay_date as realRepayDate ,
        dbo.fnFormatDate(da.distribute_time, 'yyyy-MM-dd HH:mm') as distributeTime,
        da.balance as balance,
        da.pro_repay_date as proPepayDate,
        da.distribute_history as distributeHistory,
        da.bank_amt as bankAmt,
        da.en_repay_amt as enRepayAmt,
        da.pro_repay_amt as proRepayAmt,
        da.collect_times as collectTimes,
        da.comment as comment,
        da.settle_flag as settleFlag,
        da.interest_date as interestDate,
        da.latest_overdue_money as latestOverdueMoney,
        remark1,
        remark2,
        remark3,
        remark4,
        remark5,
        remark6,
        contactName1,
        contactIdentNo1,
        contactIdentType1,
        contactRelation1,
        contactHomeTel1,
        contactUnitTel1,
        contactMobile1,
        contactUnit1,
        contactAddress1,
        contactName2,
        contactIdentNo2,
        contactIdentType2,
        contactRelation2,
        contactHomeTel2,
        contactUnitTel2,
        contactMobile2,
        contactUnit2,
        contactAddress2,
        contactName3,
        contactIdentNo3,
        contactIdentType3,
        contactRelation3,
        contactHomeTel3,
        contactUnitTel3,
        contactMobile3,
        contactUnit3,
        contactAddress3,
        contactName4,
        contactIdentNo4,
        contactIdentType4,
        contactRelation4,
        contactHomeTel4,
        contactUnitTel4,
        contactMobile4,
        contactUnit4,
        contactAddress4,
        contactName5,
        contactIdentNo5,
        contactIdentType5,
        contactRelation5,
        contactHomeTel5,
        contactUnitTel5,
        contactMobile5,
        contactUnit5,
        contactAddress5,
        contactName6,
        contactIdentNo6,
        contactIdentType6,
        contactRelation6,
        contactHomeTel6,
        contactUnitTel6,
        contactMobile6,
        contactUnit6,
        contactAddress6
    </sql>

    <sql id="colSql">
        DISTINCT da.id as id,
        da.case_date as caseDate,
        da.money as money,
        da.warning,
        da.case_deadline as caseDeadline,
        da.collect_hand as collectHand,
        da.rmb as rmb,
        da.hkd as hkd,
        da.foreign_currency as foreignCurrency,
        da.gender as gender,
        da.name as name,
        da.card_no as cardNo,
        da.ident_no as identNo,
        da.ident_type as identType,
        da.odv as [collectionUser.id],
        da.collection_area as [collectionArea.id],
        da.summary,
        da.collect_result as collectInfo,
        da.m_val as mVal,
        da.commission_rate as commissionRate,
        da.commission_money as commissionMoney,
        da.home_tel_number as homeTelNumber,
        da.unit_tel_number as unitTelNumber,
        da.tel as tel,
        da.unit_name as unitName,
        da.new_case as newCase,
        da.case_user_position as caseUserPosition,
        da.case_user_depart as caseUserDepart,
        da.unit_address as unitAddress,
        da.unit_zip_code as unitZipCode,
        da.home_address as homeAddress,
        da.home_zip_code as homeZipCode,
        da.statement_address as statementAddress,
        da.statement_zip_code as statementZipCode,
        da.census_register_address as censusRegisterAddress,
        da.census_register_zip_code as censusRegisterZipCode,
        da.qq as qq,
        da.email as email,
        da.remark as selfInfo,
        da.birthday as birthday,
        da.age as age,
        0 as [province.id],
        0 as [city.id],
        0 as [county.id],
        da.expect_retire_case_date as expectRetireCaseDate,
        da.goods as goods,
        da.commercial_tenant as commercialTenant,
        da.archive_no as archiveNo,
        da.apply_order_no as applyOrderNo,
        da.social_security_computer_no as socialSecurityComputerNo,
        da.social_security_card_no as socialSecurityCardNo,
        da.bank as bank,
        da.account as account,
        da.account_name as accountName,
        da.card_type as cardType,
        da.principle as principle,
        da.loan_rate as loanRate,
        da.residual_principle as residualPrinciple,
        da.monthly_repayments as monthlyRepayments,
        da.minimum_payment as minimumPayment,
        da.credit_line as creditLine,
        da.fixed_quota as fixedQuota,
        da.default_level as defaultLevel,
        da.last_repay_money as lastRepayMoney,
        da.last_repay_date as lastRepayDate,
        da.last_consume_date as lastConsumeDate,
        da.last_withdraw_date as lastWithdrawDate,
        da.stop_card_date as stopCardDate,
        da.active_card_date as activeCardDate,
        da.bill_date as billDate,
        da.bill_cycle as billCycle,
        da.outstanding_amount as outstandingAmount,
        da.main_deputy_card as mainDeputyCard,
        da.deputy_card_user_name as deputyCardUserName,
        da.loan_date as loanDate,
        da.loan_deadline as loanDeadline,
        da.overdue_date as overdueDate,
        da.overdue_periods as overduePeriods,
        da.overdue_days as overdueDays,
        da.overdue_times as overdueTimes,
        da.entrust_periods as entrustPeriods,
        da.repay_deadline as repayDeadline,
        da.repaid_periods as repaidPeriods,
        da.loan_type as loanType,
        da.collection_type as collectionType,
        da.overdue_money as overdueMoney,
        da.overdue_principle as overduePrinciple,
        da.overdue_interest as overdueInterest,
        da.overdue_management_cost as overdueManagementCost,
        da.overdue_default_interest as overdueDefaultInterest,
        da.penalty as penalty,
        da.late_fee as lateFee,
        da.overrun_fee as overrunFee,
        da.bail as bail,
        da.currency_type as currencyType,
        da.last_collection_record as lastCollectionRecord,
        da.overdue_bill_time as overdueBillTime,
        da.contract_no as contractNo,
        da.over_days as overDays,
        da.dealer as dealer,
        da.apply_date as applyDate,
        da.repay_date as repayDate,
        da.policy_expiry_date as policyExpiryDate,
        da.card_price as cardPrice,
        da.card_model as cardModel,
        da.license as license,
        da.brand as brand,
        da.vin as vin,
        da.engine_no as engineNo,
        da.batch_no as batchNo,
        da.client as client,
        da.collect_area as collectArea,
        da.dept as dept,
        da.odv as odv,
        da.status as status,
        da.area as area,
        da.expect_time as expectTime,
        da.color as color,
        da.collect_status as collectStatus ,
        da.collect_date as collectDate,
        da.account_age as accountAge ,
        da.seq_no as seqNo,
        da.real_repay_date as realRepayDate ,
        dbo.fnFormatDate(da.distribute_time, 'yyyy-MM-dd HH:mm') as distributeTime,
        da.balance as balance,
        da.pro_repay_date as proPepayDate,
        da.distribute_history as distributeHistory,
        da.bank_amt as bankAmt,
        da.en_repay_amt as enRepayAmt,
        da.pro_repay_amt as proRepayAmt,
        da.collect_times as collectTimes,
        da.comment as comment,
        da.settle_flag as settleFlag,
        da.interest_date as interestDate,
        da.latest_overdue_money as latestOverdueMoney
    </sql>

    <update id="updateInterest" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">

        update data_case set interest_date =#{interestDate},latest_overdue_money=#{latestOverdueMoney} where id = #{id}

    </update>

    <!--插入数据信息-->
    <insert id="saveArchive" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT @@IDENTITY AS 'Identity'
        </selectKey>
        insert into data_case
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="batchNo != null">batch_no,</if>
            <if test="money != null">money,</if>
            <if test="balance != null">balance,</if>
            <if test="rate != null">rate,</if>
            <if test="remark != null">remark,</if>
            <if test="realReturnTime != null">real_return_time,</if>
            <if test="status != null">status,</if>
            delete_flag,
            create_time,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="batchNo != null">#{batchNo},</if>
            <if test="money != null">#{money},</if>
            <if test="balance != null">#{balance},</if>
            <if test="rate != null">#{rate},</if>
            <if test="remark != null">#{remark},</if>
            <if test="realReturnTime != null">#{real_return_time},</if>
            <if test="status != null">#{status},</if>
            0,
            GETDATE(),
        </trim>
    </insert>

    <update id="updateArchive" parameterType="xyz.zaijushou.zhx.sys.entity.DataArchiveEntity">
        update data_case
        set
        <trim suffixOverrides=",">
            <if test="money != null">money = #{money},</if>
            <if test="balance != null">balance = #{balance},</if>
            <if test="status != null">status = #{status},</if>
        </trim>
        where
        id = #{id}
    </update>

    <!--通过Id删除数据信息-->
    <delete id="deleteById" parameterType="java.lang.Integer">
        update data_case set delete_flag =1
        where id = #{id}
    </delete>

    <select id="pageDataCase" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
        id,money,balance,remark,status,create_time as createTime
        from data_case
        <where>
            <trim suffixOverrides=",">
                <if test="remark != null and remark!=''">
                    remark like dbo.CONCAT('%',#{remark},'%')
                </if>
            </trim>
        </where>
    </select>

    <!--数据模块-管理列表查询-->
    <select id="pageCaseList" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
               <!--
               da.id, da.batch_no as batchNo,da.client,da.collect_area as collectArea,da.dept,da.odv,da.status,da.area,da.expect_time as expectTime,da.color,
        da.collect_status as collectStatus , da.collect_date as collectDate,  da.account_age as accountAge ,da.seq_no as seqNo,da.case_date as caseDate,da.collect_hand as collectHand,
        da.real_repay_date as realRepayDate ,da.name as name ,da.card_no as cardNo,da.ident_no as identNo,dbo.fnFormatDate(da.distribute_time,'yyyy-MM-dd ') as distributeTime,
        da.money as money,da.balance as balance,da.over_days as overDays,da.pro_repay_date as proPepayDate,da.distribute_history as distributeHistory,
        da.bank_amt as bankAmt,da.en_repay_amt as enRepayAmt,da.pro_repay_amt as proRepayAmt,da.comment,da.area,da.pro_repay_amt as proRepayAmt
        -->
        <include refid="colSql"/>
        from data_case da LEFT JOIN data_collection dc on da.id = dc.case_id
        <where>
            da.delete_flag=0
            <trim suffixOverrides=",">
                <if test="idFlag != null and idFlag!=''">
                    and da.id in
                    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="cardNoFlag != null and cardNoFlag!=''">
                    and da.card_no in
                    <foreach item="item" index="index" collection="cardNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="seqNoFlag != null and seqNoFlag!=''">
                    and da.seq_no in
                    <foreach item="item" index="index" collection="seqNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="identNoFlag != null and identNoFlag!=''">
                    and da.ident_no in
                    <foreach item="item" index="index" collection="identNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="nameFlag != null and nameFlag!=''">
                    and da.name in
                    <foreach item="item" index="index" collection="names" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="accountFlag != null and accountFlag!=''">
                    and da.account in
                    <foreach item="item" index="index" collection="accounts" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="archiveNoFlag != null and archiveNoFlag!=''">
                    and da.archive_no in
                    <foreach item="item" index="index" collection="archiveNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="clientFlag != null and clientFlag!=''">
                    and da.client in
                    <foreach item="item" index="index" collection="clients" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="batchNoFlag != null and batchNoFlag!=''">
                    and da.batch_no in
                    <foreach item="item" index="index" collection="batchNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="odvFlag != null and odvFlag!=''">
                    and da.odv in
                    <foreach item="item" index="index" collection="odvs" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>

                <if test="vin != null and vin!=''">
                    and da.vin = #{vin}
                </if>
                <if test="license != null and license!=''">
                    and da.license = #{license}
                </if>
                <if test="collectHand != null and collectHand!=''">
                    and da.collect_hand = #{collectHand}
                </if>
                <if test="bank != null and bank!=''">
                    and da.bank = #{bank}
                </if>
                <if test="moneyStart != null and moneyStart!=''">
                    <![CDATA[   and da.money>=  #{moneyStart}  ]]>
                </if>
                <if test="moneyEnd != null and moneyEnd!=''" >
                    <![CDATA[   and da.money <=  #{moneyEnd}   ]]>
                </if>
                <if test="overDays != null and overDays!=''">
                    and da.overdue_days = #{overDays}
                </if>
                <if test="collectInfo != null and collectInfo!=''">
                    and dc.collect_info = #{collectInfo}
                </if>
                <if test="dept != null and dept!=''">
                    and da.dept = #{dept}
                </if>
                <if test="reduceStatus != null and reduceStatus!=''">
                    and da.reduce_status = #{reduceStatus}
                </if>
                <if test="status != null and status!=''">
                    and da.status = #{status}
                </if>
                <if test="accountAge != null and accountAge!=''">
                    and da.account_age = #{accountAge}
                </if>
                <if test="collectStatus != null and collectStatus!=''">
                    and dc.collect_status = #{collectStatus}
                </if>
                <if test="color != null and color!=''">
                    and da.color = #{color}
                </if>
                <if test="area != null and area!=''">
                    and da.area = #{area}
                </if>
                <if test="caseType != null and caseType!=''">
                    and da.case_type = #{caseType}
                </if>
                <if test="distributeStatusFlag != null and distributeStatusFlag=='1'.toString()">
                    and da.odv is not null
                </if>
                <if test="distributeStatusFlag != null and distributeStatusFlag=='2'.toString()">
                    and (da.odv is  null or da.odv='')
                </if>

                <if test="collectArea != null and collectArea!=''">
                    and da.collect_area = #{collectArea}
                </if>
                <if test="repayDateStart != null and repayDateStart!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.repay_date, 'yyyy-MM-dd ')>=  #{repayDateStart}   ]]>
                </if>
                <if test="repayDateEnd != null and repayDateEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.repay_date, 'yyyy-MM-dd ')<=  #{repayDateEnd}   ]]>
                </if>
                <if test="caseDateStart != null and caseDateStart!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.case_date, 'yyyy-MM-dd ')>=  #{caseDateStart}   ]]>
                </if>
                <if test="caseDateEnd != null and caseDateEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.case_date, 'yyyy-MM-dd ')<=  #{caseDateEnd}  ]]>
                </if>
                <if test="expectStartTime != null and expectStartTime!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.expect_time, 'yyyy-MM-dd ')>=  #{expectStartTime}   ]]>
                </if>
                <if test="expectEndTime != null and expectEndTime!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.expect_time, 'yyyy-MM-dd ')<=  #{expectEndTime}  ]]>
                </if>
                <if test="realReturnStartTime != null and realReturnStartTime!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.real_return_time, 'yyyy-MM-dd ')>=  #{realReturnStartTime}  ]]>
                </if>
                <if test="realReturnEndTime != null and realReturnEndTime!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.real_return_time, 'yyyy-MM-dd ')<=  #{realReturnEndTime}   ]]>
                </if>
                <if test="collectStartDate != null and collectStartDate!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.collect_date, 'yyyy-MM-dd ')>=  #{collectStartDate}   ]]>
                </if>
                <if test="collectEndDate != null and collectEndDate!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.collect_date, 'yyyy-MM-dd ')>=  #{collectEndDate}   ]]>
                </if>

            </trim>
        </where>
        order by ${orderBy} ${sort}
    </select>

    <!--数据模块-管理列表查询-->
    <select id="pageCaseMangeList" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
        da.id, da.batch_no as batchNo,da.client,da.collect_area as collectArea,da.dept,da.odv,da.status,da.area,da.expect_time as expectTime,da.color,
         da.collect_status as collectStatus , da.collect_date as collectDate,  da.account_age as accountAge ,da.seq_no as seqNo,da.case_date as caseDate,da.collect_hand as collectHand,
         da.real_repay_date as realRepayDate ,da.name as name ,da.card_no as cardNo,da.ident_no as identNo,dbo.fnFormatDate(da.distribute_time,'yyyy-MM-dd ') as distributeTime,
         da.money as money,da.balance as balance,da.over_days as overDays,da.pro_repay_date as proPepayDate,da.distribute_history as distributeHistory,
         da.bank_amt as bankAmt,da.en_repay_amt as enRepayAmt,da.pro_repay_amt as proRepayAmt,da.comment,collect_result as collectInfo, da.odv as [collectionUser.id],
        da.collect_times as collectTimes
        from data_case da
        <where>
            da.delete_flag=0
            <trim suffixOverrides=",">
                <if test="idFlag != null and idFlag!=''">
                    and da.id in
                    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="cardNoFlag != null and cardNoFlag!=''">
                    and da.card_no in
                    <foreach item="item" index="index" collection="cardNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="seqNoFlag != null and seqNoFlag!=''">
                    and da.seq_no in
                    <foreach item="item" index="index" collection="seqNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="identNoFlag != null and identNoFlag!=''">
                    and da.ident_no in
                    <foreach item="item" index="index" collection="identNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="nameFlag != null and identNoFlag!=''">
                    and da.name in
                    <foreach item="item" index="index" collection="names" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="accountFlag != null and accountFlag!=''">
                    and da.account in
                    <foreach item="item" index="index" collection="accounts" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="archiveNoFlag != null and archiveNoFlag!=''">
                    and da.archive_no in
                    <foreach item="item" index="index" collection="archiveNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="clientFlag != null and clientFlag!=''">
                    and da.client in
                    <foreach item="item" index="index" collection="clients" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="batchNoFlag != null and batchNoFlag!=''">
                    and da.batch_no in
                    <foreach item="item" index="index" collection="batchNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="odvFlag != null and odvFlag!=''">
                    and da.odv in
                    <foreach item="item" index="index" collection="odvs" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>

                <if test="vin != null and vin!=''">
                    and da.vin = #{vin}
                </if>
                <if test="license != null and license!=''">
                    and da.license = #{license}
                </if>
                <if test="collectHand != null and collectHand!=''">
                    and da.collect_hand = #{collectHand}
                </if>
                <if test="bank != null and bank!=''">
                    and da.bank = #{bank}
                </if>
                <if test="moneyStart != null and moneyStart!=''">
                    <![CDATA[   and da.money>=  #{moneyStart}  ]]>
                </if>
                <if test="moneyEnd != null and moneyEnd!=''" >
                    <![CDATA[   and da.money <=  #{moneyEnd}   ]]>
                </if>
                <if test="overDays != null and overDays!=''">
                    and da.overdue_days = #{overDays}
                </if>
                <if test="collectInfo != null and collectInfo!=''">
                    and da.summary = #{collectInfo}
                </if>
                <if test="dept != null and dept!=''">
                    and da.dept = #{dept}
                </if>
                <if test="reduceStatus != null and reduceStatus!=''">
                    and da.reduce_status = #{reduceStatus}
                </if>
                <if test="status != null and status!=''">
                    and da.status = #{status}
                </if>
                <if test="accountAge != null and accountAge!=''">
                    and da.account_age = #{accountAge}
                </if>
                <if test="collectStatus != null and collectStatus!=''">
                    and da.collect_status = #{collectStatus}
                </if>
                <if test="color != null and color!=''">
                    and da.color = #{color}
                </if>
                <if test="area != null and area!=''">
                    and da.area = #{area}
                </if>
                <if test="caseType != null and caseType!=''">
                    and da.case_type = #{caseType}
                </if>
                <if test="distributeStatusFlag != null and distributeStatusFlag=='1'.toString()">
                    and da.odv is not null
                </if>
                <if test="distributeStatusFlag != null and distributeStatusFlag=='2'.toString()">
                    and (da.odv is  null or da.odv='')
                </if>

                <if test="collectArea != null and collectArea!=''">
                    and da.collect_area = #{collectArea}
                </if>
                <if test="repayDateStart != null and repayDateStart!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.repay_date, 'yyyy-MM-dd ')>=  #{repayDateStart}   ]]>
                </if>
                <if test="repayDateEnd != null and repayDateEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.repay_date, 'yyyy-MM-dd ')<=  #{repayDateEnd}   ]]>
                </if>
                <if test="caseDateStart != null and caseDateStart!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.case_date, 'yyyy-MM-dd ')>=  #{caseDateStart}  ]]>
                </if>
                <if test="caseDateEnd != null and caseDateEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.case_date, 'yyyy-MM-dd ')<=  #{caseDateEnd}   ]]>
                </if>
                <if test="expectStartTime != null and expectStartTime!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.expect_time, 'yyyy-MM-dd ')>=  #{expectStartTime}   ]]>
                </if>
                <if test="expectEndTime != null and expectEndTime!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.expect_time, 'yyyy-MM-dd ')<=  #{expectEndTime}   ]]>
                </if>
                <if test="realReturnStartTime != null and realReturnStartTime!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.real_return_time, 'yyyy-MM-dd ')>=  #{realReturnStartTime}  ]]>
                </if>
                <if test="realReturnEndTime != null and realReturnEndTime!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.real_return_time, 'yyyy-MM-dd ')<=  #{realReturnEndTime}   ]]>
                </if>
                <if test="collectStartDate != null and collectStartDate!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.collect_date, 'yyyy-MM-dd ')>=  #{collectStartDate}   ]]>
                </if>
                <if test="collectEndDate != null and collectEndDate!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.collect_date, 'yyyy-MM-dd ')>=  #{collectEndDate}   ]]>
                </if>

            </trim>
        </where>
        order by ${orderBy} ${sort}
    </select>

    <select id="pageBatchBoundsCaseList" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select id, batch_no as batchNo,client,collect_area as collectArea,dept,odv,status,area,expect_time as expectTime,color,new_case as newCase, da.odv as [collectionUser.id],
        collect_status as collectStatus , collect_date as collectDate, account_age as accountAge ,seq_no as seqNo,case_date as caseDate,collect_hand as collectHand,
        real_repay_date as realRepayDate ,name as name ,card_no as cardNo,ident_no as identNo,dbo.fnFormatDate(distribute_time,'yyyy-MM-dd  HH:mm') as distributeTime,
        money as money,balance as balance,overdue_days as overDays,pro_repay_date as proPepayDate,distribute_history as distributeHistory,collect_result as collectInfo,
        bank_amt as bankAmt,en_repay_amt as enRepayAmt,pro_repay_amt as proRepayAmt,comment,pro_repay_amt as proRepayAmt,collect_times as collectTimes
         from data_case where ident_no in (
        select da.ident_no
        from data_case da LEFT JOIN data_collection dc on da.id = dc.case_id
        <where>
            da.delete_flag = 0
            <trim suffixOverrides=",">
                <if test="idFlag != null and idFlag!=''">
                    and da.id in
                    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="cardNoFlag != null and cardNoFlag!=''">
                    and da.card_no in
                    <foreach item="item" index="index" collection="cardNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="seqNoFlag != null and seqNoFlag!=''">
                    and da.seq_no in
                    <foreach item="item" index="index" collection="seqNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="distributeStatusFlag != null and distributeStatusFlag=='1'.toString()">
                    and da.odv is not null
                </if>
                <if test="distributeStatusFlag != null and distributeStatusFlag=='2'.toString()">
                    and (da.odv is  null or da.odv='')
                </if>
                <if test="identNoFlag != null and identNoFlag!=''">
                    and da.ident_no in
                    <foreach item="item" index="index" collection="identNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="nameFlag != null and identNoFlag!=''">
                    and da.name in
                    <foreach item="item" index="index" collection="names" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="accountFlag != null and accountFlag!=''">
                    and da.account in
                    <foreach item="item" index="index" collection="accounts" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="archiveNoFlag != null and archiveNoFlag!=''">
                    and da.archive_no in
                    <foreach item="item" index="index" collection="archiveNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="clientFlag != null and clientFlag!=''">
                    and da.client in
                    <foreach item="item" index="index" collection="client" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="batchNoFlag != null and batchNoFlag!=''">
                    and da.batch_no in
                    <foreach item="item" index="index" collection="batchNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="odvFlag != null and odvFlag!=''">
                    and da.odv in
                    <foreach item="item" index="index" collection="odvs" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="vin != null and vin!=''">
                    and da.vin = #{vin}
                </if>
                <if test="license != null and license!=''">
                    and da.license = #{license}
                </if>
                <if test="collectHand != null and collectHand!=''">
                    and da.collect_hand = #{collectHand}
                </if>


                <if test="bank != null and bank!=''">
                    and da.bank = #{bank}
                </if>
                <if test="moneyStart != null and moneyStart!=''">
                    <![CDATA[   and da.money>=  #{moneyStart}  ]]>
                </if>
                <if test="moneyEnd != null and moneyEnd!=''" >
                    <![CDATA[   and da.money <=  #{moneyEnd}   ]]>
                </if>
                <if test="overDays != null and overDays!=''">
                    and da.overdue_days = #{overDays}
                </if>
                <if test="collectInfo != null and collectInfo!=''">
                    and dc.collectInfo = #{collectInfo}
                </if>
                <if test="dept != null and dept!=''">
                    and da.dept = #{dept}
                </if>
                <if test="reduceStatus != null and reduceStatus!=''">
                    and da.reduce_status = #{reduceStatus}
                </if>
                <if test="status != null and status!=''">
                    and da.status = #{status}
                </if>
                <if test="accountAge != null and accountAge!=''">
                    and da.account_age = #{accountAge}
                </if>
                <if test="collectStatus != null and collectStatus!=''">
                    and da.collect_status = #{collectStatus}
                </if>
                <if test="color != null and color!=''">
                    and da.color = #{color}
                </if>
                <if test="area != null and area!=''">
                    and da.area = #{area}
                </if>
                <if test="caseType != null and caseType!=''">
                    and da.case_type = #{caseType}
                </if>

                <if test="collectArea != null and collectArea!=''">
                    and da.collect_area = #{collectArea}
                </if>
                <if test="repayDateStart != null and repayDateStart!=''">
                    <![CDATA[   and dbo.fnFormatDated(da.repay_date, 'yyyy-MM-dd ')>=  #{repayDateStart}   ]]>
                </if>
                <if test="repayDateEnd != null and repayDateEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.repay_date, 'yyyy-MM-dd ')<=  #{repayDateEnd}   ]]>
                </if>
                <if test="caseDateStart != null and caseDateStart!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.case_date, 'yyyy-MM-dd ')>=  #{caseDateStart}   ]]>
                </if>
                <if test="caseDateEnd != null and caseDateEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.case_date, 'yyyy-MM-dd ')<=  #{caseDateEnd}   ]]>
                </if>
                <if test="expectStartTime != null and expectStartTime!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.expect_time, 'yyyy-MM-dd ')>=  #{expectStartTime}   ]]>
                </if>
                <if test="expectEndTime != null and expectEndTime!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.expect_time, 'yyyy-MM-dd ')<=  #{expectEndTime}  ]]>
                </if>
                <if test="realReturnStartTime != null and realReturnStartTime!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.real_return_time, 'yyyy-MM-dd ')>=  #{realReturnStartTime}   ]]>
                </if>
                <if test="realReturnEndTime != null and realReturnEndTime!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.real_return_time, 'yyyy-MM-dd ')<=  #{realReturnEndTime}  ]]>
                </if>
                <if test="collectStartDate != null and collectStartDate!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.collect_date, 'yyyy-MM-dd ')>=  #{collectStartDate}   ]]>
                </if>
                <if test="collectEndDate != null and collectEndDate!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.collect_date, 'yyyy-MM-dd ')>=  #{collectEndDate}   ]]>
                </if>
            </trim>
        </where>
        order by ${orderBy} ${sort}
        )
    </select>


    <!--催收模块-我的案件-列表查询-->
    <select id="pageCaseInfo" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
        da.collect_status as collectStatus , da.account_age as accountAge ,da.seq_no as seqNo,da.case_date as caseDate,
        da.real_repay_date as realRepayDate ,da.name as name ,da.card_no as cardo,da.ident_no as identNo,
        da.money as money,da.balance as balance,da.over_days as overDays,da.pro_repay_date as proPepayDate,
        da.bank_amt as bankAmt,dc.collect_info as collectInfo
        from data_case da LEFT JOIN data_collection dc on da.id = dc.case_id
        <where>
            1 = 1
            <trim suffixOverrides=",">
                <if test="client != null and client!=''">
                    and da.client = #{client}
                </if>
                <if test="batchNo != null and batchNo!=''">
                    and da.batch_no = #{batchNo}
                </if>
                <if test="seqNo != null and seqNo!=''">
                    and da.seq_no = #{seqNo}
                </if>
                <if test="name != null and name!=''">
                    and da.name = #{name}
                </if>
                <if test="identNo != null and identNo!=''">
                    and da.ident_no = #{identNo}
                </if>
                <if test="accountAge != null and accountAge!=''">
                    and da.account_age = #{accountAge}
                </if>
                <if test="account != null and account!=''">
                    and da.account = #{account}
                </if>
                <if test="status != null and status!=''">
                    and da.status = #{status}
                </if>
                <if test="collectStatus != null and collectStatus!=''">
                    and da.collect_status = #{collectStatus}
                </if>
                <if test="caseType != null and caseType!=''">
                    and da.case_type = #{caseType}
                </if>
                <if test="color != null and color!=''">
                    and da.color = #{color}
                </if>
                <if test="cardNo != null and cardNo!=''">
                    and da.card_no = #{cardNo}
                </if>
                <if test="archiveNo != null and archiveNo!=''">
                    and da.archive_no = #{archiveNo}
                </if>
                <if test="newCase != null and newCase!=''">
                    and da.new_case = #{newCase}
                </if>
                <if test="repayStatus != null and repayStatus!=''">
                    and da.repay_status = #{repayStatus}
                </if>
                <if test="reduceStatus != null and reduceStatus!=''">
                    and da.reduce_status = #{reduceStatus}
                </if>
                <if test="reportStatus != null and reportStatus!=''">
                    and da.report_status = #{reportStatus}
                </if>

                <if test="caseDateStart != null and caseDateStart!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.case_date, 'yyyy-MM-dd ')>=  #{caseDateStart}   ]]>
                </if>
                <if test="caseDateEnd != null and caseDateEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.case_date, 'yyyy-MM-dd ')<=  #{caseDateEnd}   ]]>
                </if>
                <if test="repayDateStart != null and repayDateStart!=''">
                    <![CDATA[   and dbo.fnFormatDated(da.repay_date, 'yyyy-MM-dd ')>=  #{repayDateStart}   ]]>
                </if>
                <if test="repayDateEnd != null and repayDateEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.repay_date, 'yyyy-MM-dd ')<=  #{repayDateEnd}   ]]>
                </if>
                <if test="moneyStart != null and moneyStart!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.money, 'yyyy-MM-dd ')>=  #{moneyStart}   ]]>
                </if>
                <if test="moneyEnd != null and moneyEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.money, 'yyyy-MM-dd ')<=  #{moneyEnd}   ]]>
                </if>

                <if test="realRepayDateStart != null and realRepayDateStart!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.real_return_time, 'yyyy-MM-dd ')>=  #{realRepayDateStart}  ]]>
                </if>
                <if test="realRepayDateEnd != null and realRepayDateEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.real_return_time, 'yyyy-MM-dd ')<=  #{realRepayDateEnd}   ]]>
                </if>
            </trim>
        </where>
    </select>

    <!--统计金额-->
    <select id="sumCaseMoney" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
        id
        from data_case
        <where>
            <trim suffixOverrides=",">
                <if test="remark != null and remark!=''">
                    remark like dbo.CONCAT('%',#{remark},'%')
                </if>
            </trim>
        </where>
    </select>

    <update id="watchDetail" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
         update data_case set distribute_status=3
        where id = #{id}
    </update>
    <update id="sendOdv" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set odv = #{odv},dept=#{dept},distribute_history=concat(distribute_history,#{distributeHistory}),distribute_time=GETDATE(),distribute_status=1
        where id = #{id}
    </update>

    <update id="updateStatus" parameterType="java.lang.Integer">
        update data_case set status = #{status}
        where id = #{id}
    </update>

    <update id="addComment" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set comment = #{comment}
        where id = #{id}
    </update>

    <update id="addWarning" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set warning = #{warning}
        where id = #{id}
    </update>


    <select id="nextCase" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select top 1  t.id,t.name,t.seq_no as seqNo  from data_case t
       <![CDATA[     where id > #{id}   and odv = #{odv} ]]>
         order by id asc
    </select>
    <select id="lastCase" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select top 1 t.id,t.name,t.seq_no as seqNo  from data_case t
        <![CDATA[     where id < #{id}   and odv = #{odv}   ]]>
        order by id desc
    </select>


    <update id="updateComment" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set
        <trim suffixOverrides=",">
            <if test="comment != null">comment = #{comment},</if>
            <if test="color != null">color = #{color},</if>
        </trim>
        where seq_no = #{seqNo}
    </update>

    <update id="addColor" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set color = #{color}
        where id = #{id}
    </update>
    <update id="addImportant" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set important = #{important}
        where id = #{id}
    </update>
    <update id="addCollectStatus" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set collect_status = #{collectStatus}
        where id = #{id}
    </update>
    <update id="addCollectArea" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set collect_area = #{collectArea}
        where id = #{id}
    </update>
    <update id="addMValue" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set m_val = #{mVal}
        where id = #{id}
    </update>
    <update id="addSynergy" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set synergy = 2,synergy_date = GETDATE(),synergy_context =#{synergyContext},synergy_type=#{synergyType}
        where id = #{id}
    </update>
    <!--数据模块-按照查询分配业务员-->
    <select id="sendOdvByProperty" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
          update data_case set odv = #{odv},dept=#{dept},distribute_history=concat(distribute_history,#{distributeHistory}),distribute_time=GETDATE(),distribute_status=1
          where id in
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--催收模块-主管协催-列表查询-->
    <select id="pageSynergyInfo" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
         id, synergy_context as synergyContext,seq_no as seqNo,odv,dbo.fnFormatDate(synergy_date,'yyyy-MM-dd HH:mm:ss') as synergyDate
        from data_case
        <where>
            synergy = #{synergy}
            <trim suffixOverrides=",">
                <if test="dept != null and dept!=''">
                    and dept = #{dept}
                </if>
                <if test="odv != null and odv!=''">
                    and odv = #{odv}
                </if>
                <if test="client != null and client!=''">
                    and client = #{client}
                </if>
                <if test="synergyStartTime != null and synergyStartTime!=''">
                    <![CDATA[   and dbo.fnFormatDate(synergy_date, 'yyyy-MM-dd ')>=  #{synergyStartTime}   ]]>
                </if>
                <if test="synergyEndTime != null and synergyEndTime!=''" >
                    <![CDATA[   and dbo.fnFormatDate(synergy_date, 'yyyy-MM-dd ')<=  #{synergyEndTime}   ]]>
                </if>
            </trim>
        </where>
    </select>

    <select id="countSynergyInfo" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="java.lang.Integer">
        select
        count(id) as num
        from data_case
        <where>
            synergy = #{synergy}
            <trim suffixOverrides=",">
                <if test="dept != null and dept!=''">
                    and dept = #{dept}
                </if>
                <if test="odv != null and odv!=''">
                    and odv = #{odv}
                </if>
                <if test="client != null and client!=''">
                    and client = #{client}
                </if>
                <if test="synergyStartTime != null and synergyStartTime!=''">
                    <![CDATA[   and dbo.fnFormatDate(synergy_date, 'yyyy-MM-dd ')>=  #{synergyStartTime}  ]]>
                </if>
                <if test="synergyEndTime != null and synergyEndTime!=''" >
                    <![CDATA[   and dbo.fnFormatDate(synergy_date, 'yyyy-MM-dd ')<=  #{synergyEndTime}   ]]>
                </if>
            </trim>
        </where>
    </select>

    <update id="updateSynergy" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set synergy = #{synergy}
        where id = #{id}
    </update>



    <select id="pageCaseTel" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
        t.id,t.seq_no as seqNo,t.name,t.card_no as cardNo,t.money,t.case_date as caseDate,t.collect_status as collectStatus,t.collect_date as collectDate,
        t.pro_repay_amt as proRepayAmt,t.en_repay_amt as enRepayAmt,t.account_age as accountAge,t.odv
        from data_case t LEFT JOIN data_case_tel l on t.id = l.case_id
                      LEFT  JOIN data_case_address d on t.id = d.case_id
        <where>
            <trim suffixOverrides=",">
                <if test="clientFlag != null and clientFlag!='' and queryMethod=='1'.toString()" >
                    and t.client in
                    <foreach item="item" index="index" collection="clients" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="name != null and name!='' and queryMethod=='1'.toString()">
                    and t.name = #{name}
                </if>
                <if test="cardNo != null and cardNo!='' and queryMethod=='1'.toString()">
                    and t.card_no = #{cardNo}
                </if>
                <if test="unitName != null and unitName!='' and queryMethod=='1'.toString()">
                    and t.unit_name = #{unitName}
                </if>
                <if test="identNo != null and identNo!='' and queryMethod=='1'.toString()">
                    and t.ident_no = #{identNo}
                </if>
                <if test="address != null and address!='' and queryMethod=='1'.toString()">
                    and d.address = #{address}
                </if>
                <if test="tel != null and tel!='' and queryMethod=='1'.toString()">
                    and l.tel = #{tel}
                </if>
                <if test="clientFlag != null and clientFlag!='' and queryMethod=='2'.toString()" >
                    and t.client in
                    <foreach item="item" index="index" collection="clients" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="name != null and name!='' and queryMethod=='2'.toString()">
                    AND t.name = #{name}
                </if>
                <if test="cardNo != null and cardNo!='' and queryMethod=='2'.toString()">
                    AND t.card_no = #{cardNo}
                </if>
                <if test="unitName != null and unitName!='' and queryMethod=='2'.toString()">
                    AND t.unit_name = #{unitName}
                </if>
                <if test="identNo != null and identNo!='' and queryMethod=='2'.toString()">
                    AND t.ident_no = #{identNo}
                </if>
                <if test="address != null and address!='' and queryMethod=='2'.toString()">
                    AND d.address = #{address}
                </if>
                <if test="tel != null and tel!='' and queryMethod=='2'.toString()">
                    AND l.tel = #{tel}
                </if>
            </trim>
        </where>
        order by ${orderBy} ${sort}
    </select>

    <select id="countCaseTel" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="java.lang.Integer">
        select
        count(id) as sum
        from data_case t LEFT JOIN data_case_tel l on t.id = l.case_id
        LEFT  JOIN data_case_address d on t.id = d.case_id
        <where>
            <trim suffixOverrides=",">
                <if test="client != null and client!='' and queryMethod='1'">
                    and t.client = #{client}
                </if>
                <if test="name != null and name!='' and queryMethod='1'">
                    and t.name = #{name}
                </if>
                <if test="cardNo != null and cardNo!='' and queryMethod='1'">
                    and t.card_no = #{cardNo}
                </if>
                <if test="unitName != null and unitName!='' and queryMethod='1'">
                    and t.unit_name = #{unitName}
                </if>
                <if test="identNo != null and identNo!='' and queryMethod='1'">
                    and t.ident_no = #{identNo}
                </if>
                <if test="address != null and address!='' and queryMethod='1'">
                    and d.address = #{address}
                </if>
                <if test="tel != null and tel!='' and queryMethod='1'">
                    and l.address = #{tel}
                </if>

                <if test="client != null and client!='' and queryMethod='2'">
                    AND t.client = #{client}
                </if>
                <if test="name != null and name!='' and queryMethod='2'">
                    AND t.name = #{name}
                </if>
                <if test="cardNo != null and cardNo!='' and queryMethod='2'">
                    AND t.card_no = #{cardNo}
                </if>
                <if test="unitName != null and unitName!='' and queryMethod='2'">
                    AND t.unit_name = #{unitName}
                </if>
                <if test="identNo != null and identNo!='' and queryMethod='2'">
                    AND t.ident_no = #{identNo}
                </if>
                <if test="address != null and address!='' and queryMethod='2'">
                    AND d.address = #{address}
                </if>
                <if test="tel != null and tel!='' and queryMethod='2'">
                    AND l.tel  = #{tel}
                </if>
            </trim>
        </where>
    </select>



    <select id="listAllCaseInfo" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select da.id,da.card_no as cardNo,
        da.collect_status as collectStatus , da.account_age as accountAge ,da.seq_no as seqNo,da.case_date as caseDate,
        da.real_repay_date as realRepayDate ,da.name as name ,da.card_no as cardo,da.ident_no as identNo,
        da.money as money,da.balance as balance,da.over_days as overDays,da.pro_repay_date as proPepayDate,
        da.bank_amt as bankAmt,da.batch_no as batchNo
        from data_case da
        where delete_flag = 0
        <if test="id != null and id!=''">
            and da.id = #{id}
        </if>
    </select>

    <select id="listBySeqNoSet" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
            id as id,
            seq_no as seqNo,odv
        from data_case
        where delete_flag = 0
        and seq_no in
              <foreach collection="seqNoSet" open="(" close=")" separator="," item="item">
                  #{item}
              </foreach>
    </select>

    <update id="updateBySeqNo" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case
        <set >
        <trim suffixOverrides=",">
         <if test="caseDate != null and caseDate != ''">
            case_date = #{caseDate},
        </if>
        <if test="money != null and money != ''">
            money = #{money},
        </if>
            <if test="businessType != null and businessType != ''">
                business_type = #{businessType},
            </if>
        <if test="caseDeadline != null and caseDeadline != ''">
            case_deadline = #{caseDeadline},
        </if>
        <if test="collectHand != null and collectHand != ''">
            collect_hand = #{collectHand},
        </if>
        <if test="rmb != null and rmb != ''">
            rmb = #{rmb},
        </if>
        <if test="hkd != null and hkd != ''">
            hkd = #{hkd},
        </if>
        <if test="foreignCurrency != null and foreignCurrency != ''">
            foreign_currency = #{foreignCurrency},
        </if>
        <if test="gender != null and gender != ''">
            gender = #{gender},
        </if>
        <if test="name != null and name != ''">
            name = #{name},
        </if>
        <if test="cardNo != null and cardNo != ''">
            card_no = #{cardNo},
        </if>
        <if test="identNo != null and identNo != ''">
            ident_no = #{identNo},
        </if>
        <if test="identType != null and identType != ''">
            ident_type = #{identType},
        </if>

      <if test="collectionUser != null and collectionUser.id != null">
                odv = #{collectionUser.id},
            </if>
            <if test="collectionArea != null and collectionArea.id != null">
                collection_area = #{collectionArea.id},
            </if>
        <if test="collectInfo != null and collectInfo != ''">
            collect_result = #{collectInfo},
        </if>
        <if test="mVal != null and mVal != ''">
            m_val = #{mVal},
        </if>
        <if test="commissionRate != null and commissionRate != ''">
            commission_rate = #{commissionRate},
        </if>
        <if test="commissionMoney != null and commissionMoney != ''">
            commission_money = #{commissionMoney},
        </if>
        <if test="homeTelNumber != null and homeTelNumber != ''">
            home_tel_number = #{homeTelNumber},
        </if>
        <if test="unitTelNumber != null and unitTelNumber != ''">
            unit_tel_number = #{unitTelNumber},
        </if>
        <if test="tel != null and tel != null">
            tel = #{tel},
        </if>
        <if test="unitTelNumber != null and unitTelNumber != ''">
            unit_name = #{unitName},
        </if>
        <if test="caseUserPosition != null and caseUserPosition != ''">
            case_user_position = #{caseUserPosition},
        </if>
        <if test="caseUserDepart != null and caseUserDepart != ''">
            case_user_depart = #{caseUserDepart},
        </if>
        <if test="unitAddress != null and unitAddress != ''">
            unit_address = #{unitAddress},
        </if>
        <if test="unitZipCode != null and unitZipCode != ''">
            unit_zip_code = #{unitZipCode},
        </if>
        <if test="homeAddress != null and homeAddress != ''">
            home_address = #{homeAddress},
        </if>
        <if test="homeZipCode != null and homeZipCode != ''">
            home_zip_code = #{homeZipCode},
        </if>
        <if test="statementAddress != null and statementAddress != ''">
            statement_address = #{statementAddress},
        </if>
        <if test="statementZipCode != null and statementZipCode != ''">
            statement_zip_code = #{statementZipCode},
        </if>
        <if test="censusRegisterAddress != null and censusRegisterAddress != ''">
            census_register_address = #{censusRegisterAddress},
        </if>
        <if test="censusRegisterZipCode != null and censusRegisterZipCode != ''">
            census_register_zip_code = #{censusRegisterZipCode},
        </if>
        <if test="qq != null and qq != ''">
            qq = #{qq},
        </if>
        <if test="email != null and email != ''">
            email = #{email},
        </if>
        <if test="birthday != null and birthday != ''">
            birthday = #{birthday},
        </if>
        <if test="age != null and age != ''">
            age = #{age},
        </if>
        <if test="province != null and province.id != null">
                province = #{province.id},
            </if>
            <if test="city != null and city.id != null">
                city = #{city.id},
            </if>
            <if test="county != null and county.id != null">
                county = #{county.id},
            </if>
        <if test="expectTime != null and expectTime != ''">
            expect_time = #{expectTime},
        </if>
        <if test="goods != null and goods != ''">
            goods = #{goods},
        </if>
        <if test="commercialTenant != null and commercialTenant != ''">
            commercial_tenant = #{commercialTenant},
        </if>
        <if test="archiveNo != null and archiveNo != ''">
            archive_no = #{archiveNo},
        </if>
        <if test="applyOrderNo != null and applyOrderNo != ''">
            apply_order_no = #{applyOrderNo},
        </if>
        <if test="socialSecurityComputerNo != null and socialSecurityComputerNo != ''">
            social_security_computer_no = #{socialSecurityComputerNo},
        </if>
        <if test="socialSecurityCardNo != null and socialSecurityCardNo != ''">
            social_security_card_no = #{socialSecurityCardNo},
        </if>
        <if test="bank != null and bank != ''">
            bank = #{bank},
        </if>
        <if test="accountNo != null and accountNo != ''">
            account_no = #{accountNo},
        </if>
        <if test="accountName != null and accountName != ''">
            account_name = #{accountName},
        </if>
        <if test="cardType != null and cardType != ''">
            card_type = #{cardType},
        </if>
        <if test="principle != null and principle != ''">
            principle = #{principle},
        </if>
        <if test="loanRate != null and loanRate != ''">
            loan_rate = #{loanRate},
        </if>
        <if test="residualPrinciple != null and residualPrinciple != ''">
            residual_principle = #{residualPrinciple},
        </if>
        <if test="monthlyRepayments != null and monthlyRepayments != ''">
            monthly_repayments = #{monthlyRepayments},
        </if>
         <if test="minimumPayment != null and minimumPayment != ''">
            minimum_payment = #{minimumPayment},
        </if>
        <if test="creditLine != null and creditLine != ''">
            credit_line = #{creditLine},
        </if>
            <if test="fixedQuota != null and fixedQuota != ''">
                fixed_quota = #{fixedQuota},
            </if>
            <if test="defaultLevel != null and defaultLevel != ''">
                default_level = #{defaultLevel},
            </if>
            <if test="lastRepayMoney != null and lastRepayMoney != ''">
                last_repay_money = #{lastRepayMoney},
            </if>
            <if test="lastRepayDate != null">
                last_repay_date = #{lastRepayDate},
            </if>
            <if test="lastConsumeDate != null">
                last_consume_date = #{lastConsumeDate},
            </if>
            <if test="lastWithdrawDate != null">
                last_withdraw_date = #{lastWithdrawDate},
            </if>
            <if test="stopCardDate != null">
                stop_card_date = #{stopCardDate},
            </if>
            <if test="activeCardDate != null ">
                active_card_date = #{activeCardDate},
            </if>
            <if test="billDate != null and billDate != ''">
                bill_date = #{billDate},
            </if>
            <if test="billCycle != null and billCycle != ''">
                bill_cycle = #{billCycle},
            </if>
            <if test="outstandingAmount != null and outstandingAmount != ''">
                outstanding_amount = #{outstandingAmount},
            </if>
            <if test="mainDeputyCard != null and mainDeputyCard != ''">
                main_deputy_card = #{mainDeputyCard},
            </if>
            <if test="deputyCardUserName != null and deputyCardUserName != ''">
                deputy_card_user_name = #{deputyCardUserName},
            </if>
            <if test="loanDate != null ">
                loan_date = #{loanDate},
            </if>
            <if test="loanDeadline != null">
                loan_deadline = #{loanDeadline},
            </if>
            <if test="overdueDate != null ">
                overdue_date = #{overdueDate},
            </if>
            <if test="overduePeriods != null and overduePeriods != ''">
                overdue_periods = #{overduePeriods},
            </if>
            <if test="overdueDays != null">
                overdue_days = #{overdueDays},
            </if>
            <if test="overdueTimes != null and overdueTimes != ''">
                overdue_times = #{overdueTimes},
            </if>
            <if test="entrustPeriods != null and entrustPeriods != ''">
                entrust_periods = #{entrustPeriods},
            </if>
            <if test="repayDeadline != null">
                  repay_deadline = #{repayDeadline},
              </if>
              <if test="repaidPeriods != null and repaidPeriods != ''">
                  repaid_periods = #{repaidPeriods},
              </if>
             <if test="loanType != null and loanType != ''">
                  loan_type = #{loanType},
              </if>
              <if test="collectionType != null and collectionType != ''">
                  collection_type = #{collectionType},
              </if>
              <if test="overdueMoney != null and overdueMoney != ''">
                  overdue_money = #{overdueMoney},
              </if>
              <if test="overduePrinciple != null and overduePrinciple != ''">
                  overdue_principle = #{overduePrinciple},
              </if>
              <if test="overdueInterest != null and overdueInterest != ''">
                  overdue_interest = #{overdueInterest},
              </if>
              <if test="overdueManagementCost != null and overdueManagementCost != ''">
                  overdue_management_cost = #{overdueManagementCost},
              </if>
              <if test="overdueDefaultInterest != null and overdueDefaultInterest != ''">
                  overdue_default_interest = #{overdueDefaultInterest},
              </if>
              <if test="penalty != null and penalty != ''">
                  penalty = #{penalty},
              </if>
              <if test="lateFee != null and lateFee != ''">
                  late_fee = #{lateFee},
              </if>
              <if test="overrunFee != null and overrunFee != ''">
                  overrun_fee = #{overrunFee},
              </if>
              <if test="bail != null and bail != ''">
                  bail = #{bail},
              </if>
              <if test="currencyType != null and currencyType != ''">
                  currency_type = #{currencyType},
              </if>
              <if test="lastCollectionRecord != null and lastCollectionRecord != ''">
                  last_collection_record = #{lastCollectionRecord},
              </if>
             <if test="overdueBillTime != null and overdueBillTime != ''">
                overdue_bill_time = #{overdueBillTime},
            </if>
            <if test="contractNo != null and contractNo != ''">
                contract_no = #{contractNo},
            </if>
            <if test="overDays != null and overDays != ''">
                over_days = #{overDays},
            </if>
            <if test="dealer != null and dealer != ''">
                dealer = #{dealer},
            </if>
            <if test="applyDate != null">
                apply_date = #{applyDate},
            </if>
            <if test="repayDate != null and repayDate != ''">
                repay_date = #{repayDate},
            </if>
            <if test="policyExpiryDate != null">
                policy_expiry_date = #{policyExpiryDate},
            </if>
            <if test="cardPrice != null and cardPrice != ''">
                card_price = #{cardPrice},
            </if>
            <if test="cardModel != null and cardModel != ''">
                card_model = #{cardModel},
            </if>
            <if test="license != null and license != ''">
                license = #{license},
            </if>
            <if test="brand != null and brand != ''">
                brand = #{brand},
            </if>
            <if test="vin != null and vin != ''">
                vin = #{vin},
            </if>
            <if test="engineNo != null and engineNo != ''">
                engine_no = #{engineNo},
            </if>
            <if test="contactName1 != null and contactName1 != ''">
                contactName1 = #{contactName1},
            </if>
            <if test="contactIdentNo1 != null and contactIdentNo1 != ''">
                contactIdentNo1 = #{contactIdentNo1},
            </if>
            <if test="contactIdentType1 != null and contactIdentType1 != ''">
                contactIdentType1 = #{contactIdentType1},
            </if>
            <if test="contactRelation1 != null and contactRelation1 != ''">
                contactRelation1 = #{contactRelation1},
            </if>
            <if test="contactHomeTel1 != null and contactHomeTel1 != ''">
                contactHomeTel1 = #{contactHomeTel1},
            </if>
            <if test="contactUnitTel1 != null and contactUnitTel1 != ''">
                contactUnitTel1 = #{contactUnitTel1},
            </if>
            <if test="contactMobile1 != null and contactMobile1 != ''">
                contactMobile1 = #{contactMobile1},
            </if>
            <if test="contactUnit1 != null and contactUnit1 != ''">
                contactUnit1 = #{contactUnit1},
            </if>
            <if test="contactAddress1 != null and contactAddress1 != ''">
                contactAddress1 = #{contactAddress1},
            </if>
            <if test="contactName2 != null and contactName2 != ''">
                contactName2 = #{contactName2},
            </if>
            <if test="contactIdentNo2 != null and contactIdentNo2 != ''">
                contactIdentNo2 = #{contactIdentNo2},
            </if>
            <if test="contactIdentType2 != null and contactIdentType2 != ''">
                contactIdentType1 = #{contactIdentType1},
            </if>
            <if test="contactRelation2 != null and contactRelation2 != ''">
                contactRelation2 = #{contactRelation2},
            </if>
            <if test="contactHomeTel2 != null and contactHomeTel2 != ''">
                contactHomeTel2 = #{contactHomeTel2},
            </if>
            <if test="contactUnitTel2 != null and contactUnitTel2 != ''">
                contactUnitTel2 = #{contactUnitTel2},
            </if>
            <if test="contactMobile2 != null and contactMobile2 != ''">
                contactMobile2 = #{contactMobile2},
            </if>
            <if test="contactUnit2 != null and contactUnit2 != ''">
                contactUnit2 = #{contactUnit2},
            </if>
            <if test="contactAddress2 != null and contactAddress2 != ''">
                contactAddress2 = #{contactAddress2},
            </if>
            <if test="contactName3 != null and contactName3 != ''">
                contactName3 = #{contactName3},
            </if>
            <if test="contactIdentNo3 != null and contactIdentNo3 != ''">
                contactIdentNo3 = #{contactIdentNo3},
            </if>
            <if test="contactIdentType3 != null and contactIdentType3 != ''">
                contactIdentType3 = #{contactIdentType3},
            </if>
            <if test="contactRelation3 != null and contactRelation3 != ''">
                contactRelation3 = #{contactRelation3},
            </if>
            <if test="contactHomeTel3 != null and contactHomeTel3 != ''">
                contactHomeTel3 = #{contactHomeTel3},
            </if>
            <if test="contactUnitTel3 != null and contactUnitTel3 != ''">
                contactUnitTel3 = #{contactUnitTel3},
            </if>
            <if test="contactMobile3 != null and contactMobile3 != ''">
                contactMobile3 = #{contactMobile3},
            </if>
            <if test="contactUnit3 != null and contactUnit3 != ''">
                contactUnit3 = #{contactUnit3},
            </if>
            <if test="contactAddress3 != null and contactAddress3 != ''">
                contactAddress3 = #{contactAddress3},
            </if>
            <if test="contactName4 != null and contactName4 != ''">
                contactName4 = #{contactName4},
            </if>
            <if test="contactIdentNo4 != null and contactIdentNo4 != ''">
                contactIdentNo4 = #{contactIdentNo4},
            </if>
            <if test="contactIdentType4 != null and contactIdentType4 != ''">
                contactIdentType4 = #{contactIdentType4},
            </if>
            <if test="contactRelation4 != null and contactRelation4 != ''">
                contactRelation4 = #{contactRelation4},
            </if>
            <if test="contactHomeTel4 != null and contactHomeTel4 != ''">
                contactHomeTel4 = #{contactHomeTel4},
            </if>
            <if test="contactUnitTel4 != null and contactUnitTel4 != ''">
                contactUnitTel4 = #{contactUnitTel4},
            </if>
            <if test="contactMobile4 != null and contactMobile4 != ''">
                contactMobile4 = #{contactMobile4},
            </if>
            <if test="contactUnit4 != null and contactUnit4 != ''">
                contactUnit4 = #{contactUnit4},
            </if>
            <if test="contactAddress4 != null and contactAddress4 != ''">
                contactAddress4 = #{contactAddress4},
            </if>
            <if test="contactName5 != null and contactName5 != ''">
                contactName5 = #{contactName5},
            </if>
            <if test="contactIdentNo5 != null and contactIdentNo5 != ''">
                contactIdentNo5 = #{contactIdentNo5},
            </if>
            <if test="contactIdentType5 != null and contactIdentType5 != ''">
                contactIdentType5 = #{contactIdentType5},
            </if>
            <if test="contactRelation5 != null and contactRelation5 != ''">
                contactRelation5 = #{contactRelation5},
            </if>
            <if test="contactHomeTel5 != null and contactHomeTel5 != ''">
                contactHomeTel5 = #{contactHomeTel5},
            </if>
            <if test="contactUnitTel5 != null and contactUnitTel5 != ''">
                contactUnitTel5 = #{contactUnitTel5},
            </if>
            <if test="contactMobile5 != null and contactMobile5 != ''">
                contactMobile5 = #{contactMobile5},
            </if>
            <if test="contactUnit5 != null and contactUnit5 != ''">
                contactUnit5 = #{contactUnit5},
            </if>
            <if test="contactAddress5 != null and contactAddress5 != ''">
                contactAddress5 = #{contactAddress5},
            </if>
            <if test="contactName6 != null and contactName6 != ''">
                contactName6 = #{contactName6},
            </if>
            <if test="contactIdentNo6 != null and contactIdentNo6 != ''">
                contactIdentNo6 = #{contactIdentNo6},
            </if>
            <if test="contactIdentType6 != null and contactIdentType6 != ''">
                contactIdentType6 = #{contactIdentType6},
            </if>
            <if test="contactRelation6 != null and contactRelation6 != ''">
                contactRelation6 = #{contactRelation6},
            </if>
            <if test="contactHomeTel6 != null and contactHomeTel6 != ''">
                contactHomeTel6 = #{contactHomeTel6},
            </if>
            <if test="contactUnitTel6 != null and contactUnitTel6 != ''">
                contactUnitTel6 = #{contactUnitTel6},
            </if>
            <if test="contactMobile6 != null and contactMobile6 != ''">
                contactMobile6 = #{contactMobile6},
            </if>
            <if test="contactUnit6 != null and contactUnit6 != ''">
                contactUnit6 = #{contactUnit6},
            </if>
            <if test="contactAddress6 != null and contactAddress6 != ''">
                contactAddress6 = #{contactAddress6},
            </if>
            <if test="remark1 != null and remark1 != ''">
                remark1 = #{remark1},
            </if>
            <if test="remark2 != null and remark2 != ''">
                remark2 = #{remark2},
            </if>
            <if test="remark3 != null and remark3 != ''">
                remark3 = #{remark3},
            </if>
            <if test="remark4 != null and remark4 != ''">
                remark4 = #{remark4},
            </if>
            <if test="remark5 != null and remark5 != ''">
                remark5 = #{remark5},
            </if>
            <if test="remark6 != null and remark6 != ''">
                remark6 = #{remark6},
            </if>
        </trim>
        </set>
            where seq_no = #{seqNo}
    </update>

    <insert id="saveCase" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT @@IDENTITY AS 'Identity'
        </selectKey>
        insert into data_case
        (
        seq_no,
        case_date,
        money,
        dept,
        client,
        case_deadline,
        collect_hand,
        rmb,
        hkd,
        foreign_currency,
        gender,
        business_type,
        name,
        card_no,
        ident_no,
        ident_type,
        <if test="collectionUser != null and collectionUser.id != null">
            odv,
        </if>
        <if test="collectionArea != null and collectionArea.id != null">
            collection_area,
        </if>
        collect_result,
        m_val,
        commission_rate,
        commission_money,
        home_tel_number,
        unit_tel_number,
        tel,
        unit_name,
        case_user_position,
        case_user_depart,
        unit_address,
        unit_zip_code,
        home_address,
        home_zip_code,
        statement_address,
        statement_zip_code,
        census_register_address,
        census_register_zip_code,
        qq,
        email,
        birthday,
        age,
        <if test="province != null and province.id != null">
            province,
        </if>
        <if test="city != null and city.id != null">
            city,
        </if>
        <if test="county != null and county.id != null">
            county,
        </if>
        expect_time,
        goods,
        commercial_tenant,
        archive_no,
        apply_order_no,
        social_security_computer_no,
        social_security_card_no,
        bank,
        account,
        account_name,
        card_type,
        principle,
        loan_rate,
        residual_principle,
        monthly_repayments,
        minimum_payment,
        credit_line,
        fixed_quota,
        default_level,
        last_repay_money,
        last_repay_date,
        last_consume_date,
        last_withdraw_date,
        stop_card_date,
        active_card_date,
        bill_date,
        bill_cycle,
        outstanding_amount,
        main_deputy_card,
        deputy_card_user_name,
        loan_date,
        loan_deadline,
        overdue_date,
        overdue_periods,
        overdue_days,
        overdue_times,
        entrust_periods,
        repay_deadline,
        repaid_periods,
        loan_type,
        collection_type,
        overdue_money,
        overdue_principle,
        overdue_interest,
        overdue_management_cost,
        overdue_default_interest,
        penalty,
        late_fee,
        overrun_fee,
        bail,
        currency_type,
        last_collection_record,
        account_age,
        contract_no,
        over_days,
        dealer,
        apply_date,
        repay_date,
        policy_expiry_date,
        card_price,
        card_model,
        license,
        brand,
        vin,
        engine_no,
        batch_no,
        distribute_history,
        collect_times,
        distribute_status,
        remark1,
        remark2,
        remark3,
        remark4,
        remark5,
        remark6,
        contactName1,
        contactIdentNo1,
        contactIdentType1,
        contactRelation1,
        contactHomeTel1,
        contactUnitTel1,
        contactMobile1,
        contactUnit1,
        contactAddress1,
        contactName2,
        contactIdentNo2,
        contactIdentType2,
        contactRelation2,
        contactHomeTel2,
        contactUnitTel2,
        contactMobile2,
        contactUnit2,
        contactAddress2,
        contactName3,
        contactIdentNo3,
        contactIdentType3,
        contactRelation3,
        contactHomeTel3,
        contactUnitTel3,
        contactMobile3,
        contactUnit3,
        contactAddress3,
        contactName4,
        contactIdentNo4,
        contactIdentType4,
        contactRelation4,
        contactHomeTel4,
        contactUnitTel4,
        contactMobile4,
        contactUnit4,
        contactAddress4,
        contactName5,
        contactIdentNo5,
        contactIdentType5,
        contactRelation5,
        contactHomeTel5,
        contactUnitTel5,
        contactMobile5,
        contactUnit5,
        contactAddress5,
        contactName6,
        contactIdentNo6,
        contactIdentType6,
        contactRelation6,
        contactHomeTel6,
        contactUnitTel6,
        contactMobile6,
        contactUnit6,
        contactAddress6
        )
        values
        (
        #{seqNo},
        #{caseDate},
        #{money},
        #{dept},
        #{client},
        #{caseDeadline},
        #{collectHand},
        #{rmb},
        #{hkd},
        #{foreignCurrency},
        #{gender},
        #{businessType},
        #{name},
        #{cardNo},
        #{identNo},
        #{identType},
        <if test="collectionUser != null and collectionUser.id != null">
            #{collectionUser.id},
        </if>
        <if test="collectionArea != null and collectionArea.id != null">
            #{collectionArea.id},
        </if>
        #{collectInfo},
        #{mVal},
        #{commissionRate},
        #{commissionMoney},
        #{homeTelNumber},
        #{unitTelNumber},
        #{tel},
        #{unitName},
        #{caseUserPosition},
        #{caseUserDepart},
        #{unitAddress},
        #{unitZipCode},
        #{homeAddress},
        #{homeZipCode},
        #{statementAddress},
        #{statementZipCode},
        #{censusRegisterAddress},
        #{censusRegisterZipCode},
        #{qq},
        #{email},
        #{birthday},
        #{age},
        <if test="province != null and province.id != null">
            #{province.id},
        </if>
        <if test="city != null and city.id != null">
            #{city.id},
        </if>
        <if test="county != null and county.id != null">
            #{county.id},
        </if>
        #{expectTime},
        #{goods},
        #{commercialTenant},
        #{archiveNo},
        #{applyOrderNo},
        #{socialSecurityComputerNo},
        #{socialSecurityCardNo},
        #{bank},
        #{account},
        #{accountName},
        #{cardType},
        #{principle},
        #{loanRate},
        #{residualPrinciple},
        #{monthlyRepayments},
        #{minimumPayment},
        #{creditLine},
        #{fixedQuota},
        #{defaultLevel},
        #{lastRepayMoney},
        #{lastRepayDate},
        #{lastConsumeDate},
        #{lastWithdrawDate},
        #{stopCardDate},
        #{activeCardDate},
        #{billDate},
        #{billCycle},
        #{outstandingAmount},
        #{mainDeputyCard},
        #{deputyCardUserName},
        #{loanDate},
        #{loanDeadline},
        #{overdueDate},
        #{overduePeriods},
        #{overdueDays},
        #{overdueTimes},
        #{entrustPeriods},
        #{repayDeadline},
        #{repaidPeriods},
        #{loanType},
        #{collectionType},
        #{overdueMoney},
        #{overduePrinciple},
        #{overdueInterest},
        #{overdueManagementCost},
        #{overdueDefaultInterest},
        #{penalty},
        #{lateFee},
        #{overrunFee},
        #{bail},
        #{currencyType},
        #{lastCollectionRecord},
        #{accountAge},
        #{contractNo},
        #{overDays},
        #{dealer},
        #{applyDate},
        #{repayDate},
        #{policyExpiryDate},
        #{cardPrice},
        #{cardModel},
        #{license},
        #{brand},
        #{vin},
        #{engineNo},
        #{batchNo},
        '',
        0,
        1,
        #{remark1},
        #{remark2},
        #{remark3},
        #{remark4},
        #{remark5},
        #{remark6},
        #{contactName1},
        #{contactIdentNo1},
        #{contactIdentType1},
        #{contactRelation1},
        #{contactHomeTel1},
        #{contactUnitTel1},
        #{contactMobile1},
        #{contactUnit1},
        #{contactAddress1},
        #{contactName2},
        #{contactIdentNo2},
        #{contactIdentType2},
        #{contactRelation2},
        #{contactHomeTel2},
        #{contactUnitTel2},
        #{contactMobile2},
        #{contactUnit2},
        #{contactAddress2},
        #{contactName3},
        #{contactIdentNo3},
        #{contactIdentType3},
        #{contactRelation3},
        #{contactHomeTel3},
        #{contactUnitTel3},
        #{contactMobile3},
        #{contactUnit3},
        #{contactAddress3},
        #{contactName4},
        #{contactIdentNo4},
        #{contactIdentType4},
        #{contactRelation4},
        #{contactHomeTel4},
        #{contactUnitTel4},
        #{contactMobile4},
        #{contactUnit4},
        #{contactAddress4},
        #{contactName5},
        #{contactIdentNo5},
        #{contactIdentType5},
        #{contactRelation5},
        #{contactHomeTel5},
        #{contactUnitTel5},
        #{contactMobile5},
        #{contactUnit5},
        #{contactAddress5},
        #{contactName6},
        #{contactIdentNo6},
        #{contactIdentType6},
        #{contactRelation6},
        #{contactHomeTel6},
        #{contactUnitTel6},
        #{contactMobile6},
        #{contactUnit6},
        #{contactAddress6}
        )
    </insert>

    <select id="selectCaseList" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select da.color,
        <foreach collection ="exportKeyList" item="reddemCode" index= "index" separator =",">
            ${reddemCode}
        </foreach >
        from data_case da
        where   da.id in
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectDataCaseExportByBatch" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
        <foreach collection ="exportKeyList" item="reddemCode" index= "index" separator =",">
            ${reddemCode}
        </foreach >
        from data_case da LEFT JOIN data_collection dc on da.id = dc.case_id
        where   da.batch_no = #{batchNo}
        order by ${orderBy} ${sort}
    </select>

    <select id="totalCaseList" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select  da.color,
        <foreach collection ="exportKeyList" item="reddemCode" index= "index" separator =",">
            ${reddemCode}
        </foreach >
        from data_case da
        <where>
            da.delete_flag=0
            <trim suffixOverrides=",">
                <if test="idFlag != null and idFlag!=''">
                    and da.id in
                    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="cardNoFlag != null and cardNoFlag!=''">
                    and da.card_no in
                    <foreach item="item" index="index" collection="cardNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="seqNoFlag != null and seqNoFlag!=''">
                    and da.seq_no in
                    <foreach item="item" index="index" collection="seqNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="identNoFlag != null and identNoFlag!=''">
                    and da.ident_no in
                    <foreach item="item" index="index" collection="identNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="nameFlag != null and identNoFlag!=''">
                    and da.name in
                    <foreach item="item" index="index" collection="names" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="accountFlag != null and accountFlag!=''">
                    and da.account in
                    <foreach item="item" index="index" collection="accounts" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="archiveNoFlag != null and archiveNoFlag!=''">
                    and da.archive_no in
                    <foreach item="item" index="index" collection="archiveNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="clientFlag != null and clientFlag!=''">
                    and da.client in
                    <foreach item="item" index="index" collection="clients" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="batchNoFlag != null and batchNoFlag!=''">
                    and da.batch_no in
                    <foreach item="item" index="index" collection="batchNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="odvFlag != null and odvFlag!=''">
                    and da.odv in
                    <foreach item="item" index="index" collection="odvs" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>

                <if test="vin != null and vin!=''">
                    and da.vin = #{vin}
                </if>
                <if test="license != null and license!=''">
                    and da.license = #{license}
                </if>
                <if test="collectHand != null and collectHand!=''">
                    and da.collect_hand = #{collectHand}
                </if>
                <if test="bank != null and bank!=''">
                    and da.bank = #{bank}
                </if>
                <if test="moneyStart != null and moneyStart!=''">
                    <![CDATA[   and da.money>=  #{moneyStart}  ]]>
                </if>
                <if test="moneyEnd != null and moneyEnd!=''" >
                    <![CDATA[   and da.money <=  #{moneyEnd}   ]]>
                </if>
                <if test="overDays != null and overDays!=''">
                    and da.overdue_days = #{overDays}
                </if>
                <if test="collectInfo != null and collectInfo!=''">
                    and da.summary = #{collectInfo}
                </if>
                <if test="batchNo != null and batchNo!=''">
                    and da.batch_no = #{batchNo}
                </if>
                <if test="dept != null and dept!=''">
                    and da.dept = #{dept}
                </if>
                <if test="reduceStatus != null and reduceStatus!=''">
                    and da.reduce_status = #{reduceStatus}
                </if>
                <if test="status != null and status!=''">
                    and da.status = #{status}
                </if>
                <if test="accountAge != null and accountAge!=''">
                    and da.account_age = #{accountAge}
                </if>
                <if test="collectStatus != null and collectStatus!=''">
                    and da.collect_status = #{collectStatus}
                </if>
                <if test="color != null and color!=''">
                    and da.color = #{color}
                </if>
                <if test="area != null and area!=''">
                    and da.area = #{area}
                </if>
                <if test="caseType != null and caseType!=''">
                    and da.case_type = #{caseType}
                </if>
                <if test="distributeStatusFlag != null and distributeStatusFlag=='1'.toString()">
                    and da.odv is not null
                </if>
                <if test="distributeStatusFlag != null and distributeStatusFlag=='2'.toString()">
                    and (da.odv is  null or da.odv='')
                </if>

                <if test="collectArea != null and collectArea!=''">
                    and da.collect_area = #{collectArea}
                </if>
                <if test="repayDateStart != null and repayDateStart!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.repay_date, 'yyyy-MM-dd ')>=  #{repayDateStart}   ]]>
                </if>
                <if test="repayDateEnd != null and repayDateEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.repay_date, 'yyyy-MM-dd ')<=  #{repayDateEnd}   ]]>
                </if>
                <if test="caseDateStart != null and caseDateStart!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.case_date, 'yyyy-MM-dd ')>=  #{caseDateStart}  ]]>
                </if>
                <if test="caseDateEnd != null and caseDateEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.case_date, 'yyyy-MM-dd ')<=  #{caseDateEnd}   ]]>
                </if>
                <if test="expectStartTime != null and expectStartTime!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.expect_time, 'yyyy-MM-dd ')>=  #{expectStartTime}   ]]>
                </if>
                <if test="expectEndTime != null and expectEndTime!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.expect_time, 'yyyy-MM-dd ')<=  #{expectEndTime}   ]]>
                </if>
                <if test="realReturnStartTime != null and realReturnStartTime!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.real_return_time, 'yyyy-MM-dd ')>=  #{realReturnStartTime}   ]]>
                </if>
                <if test="realReturnEndTime != null and realReturnEndTime!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.real_return_time, 'yyyy-MM-dd ')<=  #{realReturnEndTime}   ]]>
                </if>
                <if test="collectStartDate != null and collectStartDate!=''">
                    <![CDATA[   and dbo.fnFormatDate(da.collect_date, 'yyyy-MM-dd ')>= #{collectStartDate}  ]]>
                </if>
                <if test="collectEndDate != null and collectEndDate!=''" >
                    <![CDATA[   and dbo.fnFormatDate(da.collect_date, 'yyyy-MM-dd ')>=  #{collectEndDate}   ]]>
                </if>

            </trim>
        </where>
        order by ${orderBy} ${sort}
    </select>


    <select id="totalBatchBoundsCaseList" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select  da.color,
        <foreach collection ="exportKeyList" item="reddemCode" index= "index" separator =",">
            ${reddemCode}
        </foreach >
         from data_case da where da.ident_no in (
        select t.ident_no
        from data_case t LEFT JOIN data_collection dc on t.id = dc.case_id
        <where>
            1 = 1
            <trim suffixOverrides=",">
                <if test="idFlag != null and idFlag!=''">
                    and t.id in
                    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                    #{item}
                </foreach>
                </if>
                <if test="cardNoFlag != null and cardNoFlag!=''">
                    and t.card_no in
                    <foreach item="item" index="index" collection="cardNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="seqNoFlag != null and seqNoFlag!=''">
                    and t.seq_no in
                    <foreach item="item" index="index" collection="seqNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="identNoFlag != null and identNoFlag!=''">
                    and t.ident_no in
                    <foreach item="item" index="index" collection="identNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="nameFlag != null and identNoFlag!=''">
                    and t.name in
                    <foreach item="item" index="index" collection="names" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="accountFlag != null and accountFlag!=''">
                    and t.account in
                    <foreach item="item" index="index" collection="accounts" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="archiveNoFlag != null and archiveNoFlag!=''">
                    and t.archive_no in
                    <foreach item="item" index="index" collection="archiveNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="clientFlag != null and clientFlag!=''">
                    and t.client in
                    <foreach item="item" index="index" collection="client" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="batchNoFlag != null and batchNoFlag!=''">
                    and t.batch_no in
                    <foreach item="item" index="index" collection="batchNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="odvFlag != null and odvFlag!=''">
                    and t.odv in
                    <foreach item="item" index="index" collection="odvs" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="dept != null and dept!=''">
                    and t.dept = #{dept}
                </if>

                <if test="accountAge != null and accountAge!=''">
                    and t.account_age = #{accountAge}
                </if>
                <if test="collectArea != null and collectArea!=''">
                    and t.collect_area = #{collectArea}
                </if>
                <if test="overDays != null and overDays!=''">
                    and t.over_days = #{overDays}
                </if>
                <if test="area != null and area!=''">
                    and t.area = #{area}
                </if>
                <if test="license != null and license!=''">
                    and t.license = #{license}
                </if>
                <if test="expectStartTime != null and expectStartTime!=''">
                    <![CDATA[   and dbo.fnFormatDate(t.expect_time, 'yyyy-MM-dd ')>=  #{expectStartTime}   ]]>
                </if>
                <if test="expectEndTime != null and expectEndTime!=''" >
                    <![CDATA[   and dbo.fnFormatDate(t.expect_time, 'yyyy-MM-dd ')<=  #{expectEndTime}   ]]>
                </if>

                <if test="collectHand != null and collectHand!=''">
                    and t.collect_hand = #{collectHand}
                </if>
                <if test="distributeStatus != null and distributeStatus!=''">
                    and t.distribute_status = #{distributeStatus}
                </if>
                <if test="vin != null and vin!=''">
                    and t.vin = #{vin}
                </if>
                <if test="status != null and status!=''">
                    and t.status = #{status}
                </if>
                <if test="bank != null and bank!=''">
                    and t.bank = #{bank}
                </if>
                <if test="collectStartDate != null and collectStartDate!=''">
                    <![CDATA[   and dbo.fnFormatDate(t.collect_date, 'yyyy-MM-dd ')>=  #{collectStartDate}   ]]>
                </if>
                <if test="collectEndDate != null and collectEndDate!=''" >
                    <![CDATA[   and dbo.fnFormatDate(t.collect_date, 'yyyy-MM-dd ')>=  #{collectEndDate}   ]]>
                </if>
                <if test="collectInfo != null and collectInfo!=''">
                    and dc.collectInfo = #{collectInfo}
                </if>
                <if test="collectStatus != null and collectStatus!=''">
                    and dc.collect_status = #{collectStatus}
                </if>
                <if test="caseType != null and caseType!=''">
                    and t.case_type = #{caseType}
                </if>
                <if test="color != null and color!=''">
                    and t.color = #{color}
                </if>

                <if test="caseDateStart != null and caseDateStart!=''">
                    <![CDATA[   and dbo.fnFormatDate(t.case_date, 'yyyy-MM-dd ')>=  #{caseDateStart}   ]]>
                </if>
                <if test="caseDateEnd != null and caseDateEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(t.case_date, 'yyyy-MM-dd ')<=  #{caseDateEnd}   ]]>
                </if>
                <if test="repayDateStart != null and repayDateStart!=''">
                    <![CDATA[   and dbo.fnFormatDated(t.repay_date, 'yyyy-MM-dd ')>=  #{repayDateStart}   ]]>
                </if>
                <if test="repayDateEnd != null and repayDateEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(t.repay_date, 'yyyy-MM-dd ')<=  #{repayDateEnd}   ]]>
                </if>
                <if test="moneyStart != null and moneyStart!=''">
                    <![CDATA[   and dbo.fnFormatDate(t.money, 'yyyy-MM-dd ')>=  #{moneyStart}   ]]>
                </if>
                <if test="moneyEnd != null and moneyEnd!=''" >
                    <![CDATA[   and dbo.fnFormatDate(t.money, 'yyyy-MM-dd ')<=  #{moneyEnd}   ]]>
                </if>

                <if test="realReturnStartTime != null and realReturnStartTime!=''">
                    <![CDATA[   and dbo.fnFormatDate(t.real_return_time, 'yyyy-MM-dd ')>= #{realReturnStartTime}  ]]>
                </if>
                <if test="realReturnEndTime != null and realReturnEndTime!=''" >
                    <![CDATA[   and dbo.fnFormatDate(t.real_return_time, 'yyyy-MM-dd ')<=  #{realReturnEndTime}   ]]>
                </if>
            </trim>
        </where>
        order by ${orderBy} ${sort}
        )
    </select>


    <select id="selectCaseTelListExport" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseTelExport" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseTelExport">
          SELECT
        <foreach collection ="exportKeyList" item="reddemCode" index= "index" separator =",">
            ${reddemCode}
        </foreach >
          from data_case_tel t LEFT  JOIN data_case d on t.case_id = d.id
          where d.id in
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <select id="detail" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseDetail">
          select
        <include refid="detailColSql"/>
          from data_case da where da.id = #{id}
    </select>

    <update id="updateRemark" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" >

          update data_case set remark = #{remark} where id = #{id}

    </update>

    <select id="pageSeqNos" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
        <include refid="colSql"/>
        from data_case da
        where da.delete_flag = 0
        <if test="seqNo != null and seqNo != ''">
            and da.seq_no = #{seqNo}
        </if>
    </select>

    <select id="listSynergy" parameterType="java.util.List" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
          SELECT
            t.id,t.synergy,t.synergy_type as synergyType,t.synergy_context as synergyContext,t.synergy_date as synergyDate,t.odv,t.synergy_checker as synerCkecker,t.synergy_context as synerCheckContext,t.syner_check_time as synergyCheckTime
          from data_case t
          where t.synergy in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>

    </select>

    <select id="findById" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
          SELECT id,batch_no as batchNo,money,ident_no as identNo,seq_no as seqNo,archive_no as archiveNo,card_no as cardNo,case_date as caseDate,name from data_case where id = #{id}
    </select>

    <select id="findSameBatchCase" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
          select seq_no as seqNo,account,card_no as cardNo,money,currency_type as currencyType ,
          pro_repay_amt as proRepayAmt,bank_amt as bankAmt,en_repay_amt as enRepayAmt,account_age as accountAge,
          collect_date as collectDate
          from   data_case  where batch_no = #{batchNo} and ident_no = #{identNo} and  <![CDATA[ id <> #{id} ]]>
    </select>

    <select id="findSameCase" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
          select t.id,t.batch_no as batchNo,t.seq_no as seqNo,t.case_date caseDate,t.card_no as cardNo,t.name,t.client,t.money,t.collect_status as collectStatus,
          t.odv,t.en_repay_amt as enRepayAmt
          from data_case t where t.ident_no in
          (select ident_no from data_case where id = #{id}) and  <![CDATA[ t.id <> #{id} ]]>
    </select>

    <update id="addCollectTimes" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set collect_times = collect_times+1 where id =#{id}
    </update>

    <update id="addBatchCollectTimes" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set collect_times = collect_times+#{collectTimes} where id =#{id}
    </update>

    <update id="updateDataCaseByCollect" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
          update data_case set new_case=#{newCase},collect_times=collect_times+1 where id=#{id}
    </update>

    <update id="updateDataCaseByCollect2" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set new_case=#{newCase} where id=#{id}
    </update>

    <update id="updateDataCaseByCollect3" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set new_case=#{newCase},collect_date = #{collectDate} where id=#{id}
    </update>

    <update id="updateDataCaseByCollectAdd" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set new_case=#{newCase},collect_status=#{collectStatus},summary=#{summary},
        collect_times=collect_times+1,pro_repay_amt = #{proRepayAmt},pro_repay_date = #{proRepayDate}
         where id=#{id}
    </update>

    <update id="updateDataCaseByCollectResult" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set summary=#{summary} where id=#{id}
    </update>

    <select id="listByBatchNos" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select id from data_case where batch_no in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
         and delete_flag=0
    </select>

    <select id="countUserCase" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="java.lang.Integer">
        select
        count(id) as num
        from data_case
        where delete_flag = 0 and odv = #{odv}
    </select>

    <update id="updateRepayMoney" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case
        set en_repay_amt = #{enRepayAmt},
            <if test="updateUser != null and updateUser.id != null">update_user = #{updateUser.id},</if>
            <if test="settleFlag != null and settleFlag == '已结清'.toString()">
                settle_flag = #{settleFlag},status = 3,
            </if>
            <if test="settleFlag != null and settleFlag != '已结清'">
                settle_flag = #{settleFlag},
            </if>
            balance = money - #{enRepayAmt},settle_date=GETDATE()
        where id = #{id}
    </update>

    <update id="updateCpMoney" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case
        set bank_amt = #{bankAmt},
        <if test="updateUser != null and updateUser.id != null">update_user = #{updateUser.id}</if>
        where id = #{id}
    </update>

    <update id="updateCollectInfo" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case
        set collect_result = #{collectInfo}
        where id = #{id}
    </update>

    <select id="selectCommonCase"  resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select sum(r.repayMoney) as enRepayAmt ,t.business_type as businessType
        from data_case t LEFT JOIN (
            select repay_money as repayMoney,data_case
            from data_case_repay_record
            where 1=1
            <![CDATA[   and dbo.fnFormatDate(repay_date, 'yyyy-MM-dd ')>=  #{repayDateStart}   ]]>
             <![CDATA[   and dbo.fnFormatDate(repay_date, 'yyyy-MM-dd ')<=  #{repayDateEnd}   ]]>
            <if test="odv != null and odv != ''"> and collect_user = #{odv}</if>
         ) r on t.id = r.data_case
         where t.business_type not in ('上汽长账龄上汽拖车','上汽长账龄其他','上汽短期','安吉蓝海') and t.business_type is not null
        group by t.business_type
    </select>

    <select id="selectTsCase1"  resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select sum(r.repayMoney) as enRepayAmt,t.money,t.business_type as businessType,
        dbo.fnFormatDate(t.settle_date, 'yyyy-MM-dd ') as settleDate,t.settle_flag as settleFlag
        from data_case t LEFT JOIN (
        select repay_money as repayMoney,data_case
        from data_case_repay_record
        where  1=1
        <if test="odv != null and odv != ''"> and collect_user = #{odv}</if>
        ) r on t.id = r.data_case
        where t.business_type  in ('上汽长账龄上汽拖车','上汽长账龄其他')
        <![CDATA[   and dbo.fnFormatDate(t.settle_date, 'yyyy-MM-dd ')>=  #{repayDateStart}   ]]>
        <![CDATA[   and dbo.fnFormatDate(t.settle_date, 'yyyy-MM-dd ')<=  #{repayDateEnd}   ]]>
        group by t.money,t.business_type ,t.settle_date,t.settle_flag
    </select>

    <select id="selectTsCase2"  resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select sum(r.repayMoney) as enRepayAmt,t.money ,t.business_type as businessType
        from data_case t LEFT JOIN (
            select repay_money as repayMoney,data_case
            from data_case_repay_record
            where  <![CDATA[repay_date>=#{repayDateStart} and repay_date <=#{repayDateEnd}]]>
            <if test="odv != null and odv != ''"> and collect_user = #{odv}</if>
        ) r on t.id = r.data_case
        where t.business_type  in ('上汽短期','安吉蓝海')
        group by t.business_type,t.money
    </select>
</mapper>