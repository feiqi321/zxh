<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.zaijushou.zhx.sys.dao.DataCaseMapper">

    <sql id="colSql">
        DISTINCT da.id as id,
        da.case_date as caseDate,
        da.money as money,
        da.case_deadline as caseDeadline,
        da.collect_hand as collectHand,
        da.rmb as rmb,
        da.hkd as hkd,
        da.foreign_currency as foreignCurrency,
        da.gender as gender,
        da.name as name,
        da.card_no as cardNo,
        da.ident_no as identNo,
        da.ident_type as identType,
        da.odv as 'collectionUser.id',
        da.collection_area as 'collectionArea.id',
        da.summary as collectInfo,
        da.m_val as mVal,
        da.commission_rate as commissionRate,
        da.commission_money as commissionMoney,
        da.home_tel_number as homeTelNumber,
        da.unit_tel_number as unitTelNumber,
        da.tel as tel,
        da.unit_name as unitName,
        da.new_case as newCase,
        da.case_user_position as caseUserPosition,
        da.case_user_depart as caseUserDepart,
        da.unit_address as unitAddress,
        da.unit_zip_code as unitZipCode,
        da.home_address as homeAddress,
        da.home_zip_code as homeZipCode,
        da.statement_address as statementAddress,
        da.statement_zip_code as statementZipCode,
        da.census_register_address as censusRegisterAddress,
        da.census_register_zip_code as censusRegisterZipCode,
        da.qq as qq,
        da.email as email,
        da.remark as selfInfo,
        da.birthday as birthday,
        da.age as age,
        da.province as 'province.id',
        da.city as 'city.id',
        da.county as 'county.id',
        da.expect_retire_case_date as expectRetireCaseDate,
        da.goods as goods,
        da.commercial_tenant as commercialTenant,
        da.archive_no as archiveNo,
        da.apply_order_no as applyOrderNo,
        da.social_security_computer_no as socialSecurityComputerNo,
        da.social_security_card_no as socialSecurityCardNo,
        da.bank as bank,
        da.account as account,
        da.account_name as accountName,
        da.card_type as cardType,
        da.principle as principle,
        da.loan_rate as loanRate,
        da.residual_principle as residualPrinciple,
        da.monthly_repayments as monthlyRepayments,
        da.minimum_payment as minimumPayment,
        da.credit_line as creditLine,
        da.fixed_quota as fixedQuota,
        da.default_level as defaultLevel,
        da.last_repay_money as lastRepayMoney,
        da.last_repay_date as lastRepayDate,
        da.last_consume_date as lastConsumeDate,
        da.last_withdraw_date as lastWithdrawDate,
        da.stop_card_date as stopCardDate,
        da.active_card_date as activeCardDate,
        da.bill_date as billDate,
        da.bill_cycle as billCycle,
        da.outstanding_amount as outstandingAmount,
        da.main_deputy_card as mainDeputyCard,
        da.deputy_card_user_name as deputyCardUserName,
        da.loan_date as loanDate,
        da.loan_deadline as loanDeadline,
        da.overdue_date as overdueDate,
        da.overdue_periods as overduePeriods,
        da.overdue_days as overdueDays,
        da.overdue_times as overdueTimes,
        da.entrust_periods as entrustPeriods,
        da.repay_deadline as repayDeadline,
        da.repaid_periods as repaidPeriods,
        da.loan_type as loanType,
        da.collection_type as collectionType,
        da.overdue_money as overdueMoney,
        da.overdue_principle as overduePrinciple,
        da.overdue_interest as overdueInterest,
        da.overdue_management_cost as overdueManagementCost,
        da.overdue_default_interest as overdueDefaultInterest,
        da.penalty as penalty,
        da.late_fee as lateFee,
        da.overrun_fee as overrunFee,
        da.bail as bail,
        da.currency_type as currencyType,
        da.last_collection_record as lastCollectionRecord,
        da.overdue_bill_time as overdueBillTime,
        da.contract_no as contractNo,
        da.over_days as overDays,
        da.dealer as dealer,
        da.apply_date as applyDate,
        da.repay_date as repayDate,
        da.policy_expiry_date as policyExpiryDate,
        da.card_price as cardPrice,
        da.card_model as cardModel,
        da.license as license,
        da.brand as brand,
        da.vin as vin,
        da.engine_no as engineNo,
        da.batch_no as batchNo,
        da.client as client,
        da.collect_area as collectArea,
        da.dept as dept,
        da.odv as odv,
        da.status as status,
        da.area as area,
        da.expect_time as expectTime,
        da.color as color,
        da.collect_status as collectStatus ,
        da.collect_date as collectDate,
        da.account_age as accountAge ,
        da.seq_no as seqNo,
        da.real_repay_date as realRepayDate ,
        DATE_FORMAT(da.distribute_time, '%Y-%m-%d %H:%i') as distributeTime,
        da.balance as balance,
        da.pro_repay_date as proPepayDate,
        da.distribute_history as distributeHistory,
        da.bank_amt as bankAmt,
        da.en_repay_amt as enRepayAmt,
        da.pro_repay_amt as proRepayAmt,
        da.collect_times as collectTimes,
        da.comment as comment
    </sql>

    <!--插入数据信息-->
    <insert id="saveArchive" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into data_case
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="batchNo != null">batch_no,</if>
            <if test="money != null">money,</if>
            <if test="balance != null">balance,</if>
            <if test="rate != null">rate,</if>
            <if test="remark != null">remark,</if>
            <if test="realReturnTime != null">real_return_time,</if>
            <if test="status != null">status,</if>
            delete_flag,
            create_time,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="batchNo != null">#{batchNo},</if>
            <if test="money != null">#{money},</if>
            <if test="balance != null">#{balance},</if>
            <if test="rate != null">#{rate},</if>
            <if test="remark != null">#{remark},</if>
            <if test="realReturnTime != null">#{real_return_time},</if>
            <if test="status != null">#{status},</if>
            0,
            now(),
        </trim>
    </insert>

    <update id="updateArchive" parameterType="xyz.zaijushou.zhx.sys.entity.DataArchiveEntity">
        update data_case
        set
        <trim suffixOverrides=",">
            <if test="money != null">money = #{money},</if>
            <if test="balance != null">balance = #{balance},</if>
            <if test="status != null">status = #{status},</if>
        </trim>
        where
        id = #{id}
    </update>

    <!--通过Id删除数据信息-->
    <delete id="deleteById" parameterType="java.lang.Integer">
        update data_case set delete_flag =1
        where id = #{id}
    </delete>

    <select id="pageDataCase" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
        id,money,balance,remark,status,create_time as createTime
        from data_case
        <where>
            <trim suffixOverrides=",">
                <if test="remark != null and remark!=''">
                    remark like CONCAT('%',#{remark},'%')
                </if>
            </trim>
        </where>
    </select>

    <!--数据模块-管理列表查询-->
    <select id="pageCaseList" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
               <!--
               da.id, da.batch_no as batchNo,da.client,da.collect_area as collectArea,da.dept,da.odv,da.status,da.area,da.expect_time as expectTime,da.color,
        da.collect_status as collectStatus , da.collect_date as collectDate,  da.account_age as accountAge ,da.seq_no as seqNo,da.case_date as caseDate,da.collect_hand as collectHand,
        da.real_repay_date as realRepayDate ,da.name as name ,da.card_no as cardNo,da.ident_no as identNo,DATE_FORMAT(da.distribute_time,'%Y-%m-%d') as distributeTime,
        da.money as money,da.balance as balance,da.over_days as overDays,da.pro_repay_date as proPepayDate,da.distribute_history as distributeHistory,
        da.bank_amt as bankAmt,da.en_repay_amt as enRepayAmt,da.pro_repay_amt as proRepayAmt,da.comment,da.area,da.pro_repay_amt as proRepayAmt
        -->
        <include refid="colSql"/>
        from data_case da LEFT JOIN data_collection dc on da.id = dc.case_id
        <where>
            da.delete_flag=0
            <trim suffixOverrides=",">
                <if test="idFlag != null and idFlag!=''">
                    and da.id in
                    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="cardNoFlag != null and cardNoFlag!=''">
                    and da.card_no in
                    <foreach item="item" index="index" collection="cardNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="seqNoFlag != null and seqNoFlag!=''">
                    and da.seq_no in
                    <foreach item="item" index="index" collection="seqNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="identNoFlag != null and identNoFlag!=''">
                    and da.ident_no in
                    <foreach item="item" index="index" collection="identNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="nameFlag != null and identNoFlag!=''">
                    and da.name in
                    <foreach item="item" index="index" collection="names" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="accountFlag != null and accountFlag!=''">
                    and da.account in
                    <foreach item="item" index="index" collection="accounts" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="archiveNoFlag != null and archiveNoFlag!=''">
                    and da.archive_no in
                    <foreach item="item" index="index" collection="archiveNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="clientFlag != null and clientFlag!=''">
                    and da.client in
                    <foreach item="item" index="index" collection="clients" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="batchNoFlag != null and batchNoFlag!=''">
                    and da.batch_no in
                    <foreach item="item" index="index" collection="batchNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="odvFlag != null and odvFlag!=''">
                    and da.odv in
                    <foreach item="item" index="index" collection="odvs" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>

                <if test="vin != null and vin!=''">
                    and da.vin = #{vin}
                </if>
                <if test="license != null and license!=''">
                    and da.license = #{license}
                </if>
                <if test="collectHand != null and collectHand!=''">
                    and da.collect_hand = #{collectHand}
                </if>
                <if test="bank != null and bank!=''">
                    and da.bank = #{bank}
                </if>
                <if test="moneyStart != null and moneyStart!=''">
                    <![CDATA[   and da.money>=  #{moneyStart}  ]]>
                </if>
                <if test="moneyEnd != null and moneyEnd!=''" >
                    <![CDATA[   and da.money <=  #{moneyEnd}   ]]>
                </if>
                <if test="overDays != null and overDays!=''">
                    and da.overdue_days = #{overDays}
                </if>
                <if test="collectInfo != null and collectInfo!=''">
                    and dc.collectInfo = #{collectInfo}
                </if>
                <if test="batchNo != null and batchNo!=''">
                    and dc.batch_no = #{batchNo}
                </if>
                <if test="dept != null and dept!=''">
                    and da.dept = #{dept}
                </if>
                <if test="reduceStatus != null and reduceStatus!=''">
                    and da.reduce_status = #{reduceStatus}
                </if>
                <if test="status != null and status!=''">
                    and da.status = #{status}
                </if>
                <if test="accountAge != null and accountAge!=''">
                    and da.account_age = #{accountAge}
                </if>
                <if test="collectStatus != null and collectStatus!=''">
                    and dc.collect_status = #{collectStatus}
                </if>
                <if test="color != null and color!=''">
                    and da.color = #{color}
                </if>
                <if test="area != null and area!=''">
                    and da.area = #{area}
                </if>
                <if test="caseType != null and caseType!=''">
                    and da.case_type = #{caseType}
                </if>
                <if test="distributeStatus != null and distributeStatus!=''">
                    and da.distribute_status = #{distributeStatus}
                </if>

                <if test="collectArea != null and collectArea!=''">
                    and da.collect_area = #{collectArea}
                </if>
                <if test="repayDateStart != null and repayDateStart!=''">
                    <![CDATA[   and DATE_FORMAT(da.repay_date, '%Y-%m-%d')>=  DATE_FORMAT(#{repayDateStart}, '%Y-%m-%d')   ]]>
                </if>
                <if test="repayDateEnd != null and repayDateEnd!=''" >
                    <![CDATA[   and DATE_FORMAT(da.repay_date, '%Y-%m-%d')<=  DATE_FORMAT(#{repayDateEnd}, '%Y-%m-%d')   ]]>
                </if>
                <if test="caseDateStart != null and caseDateStart!=''">
                    <![CDATA[   and DATE_FORMAT(da.case_date, '%Y-%m-%d')>=  DATE_FORMAT(#{caseDateStart}, '%Y-%m-%d')   ]]>
                </if>
                <if test="caseDateEnd != null and caseDateEnd!=''" >
                    <![CDATA[   and DATE_FORMAT(da.case_date, '%Y-%m-%d')<=  DATE_FORMAT(#{caseDateEnd}, '%Y-%m-%d')   ]]>
                </if>
                <if test="expectStartTime != null and expectStartTime!=''">
                    <![CDATA[   and DATE_FORMAT(da.expect_time, '%Y-%m-%d')>=  DATE_FORMAT(#{expectStartTime}, '%Y-%m-%d')   ]]>
                </if>
                <if test="expectEndTime != null and expectEndTime!=''" >
                    <![CDATA[   and DATE_FORMAT(da.expect_time, '%Y-%m-%d')<=  DATE_FORMAT(#{expectEndTime}, '%Y-%m-%d')   ]]>
                </if>
                <if test="realReturnStartTime != null and realReturnStartTime!=''">
                    <![CDATA[   and DATE_FORMAT(da.real_return_time, '%Y-%m-%d')>=  DATE_FORMAT(#{realReturnStartTime}, '%Y-%m-%d')   ]]>
                </if>
                <if test="realReturnEndTime != null and realReturnEndTime!=''" >
                    <![CDATA[   and DATE_FORMAT(da.real_return_time, '%Y-%m-%d')<=  DATE_FORMAT(#{realReturnEndTime}, '%Y-%m-%d')   ]]>
                </if>
                <if test="collectStartDate != null and collectStartDate!=''">
                    <![CDATA[   and DATE_FORMAT(da.collect_date, '%Y-%m-%d')>=  DATE_FORMAT(#{collectStartDate}, '%Y-%m-%d')   ]]>
                </if>
                <if test="collectEndDate != null and collectEndDate!=''" >
                    <![CDATA[   and DATE_FORMAT(da.collect_date, '%Y-%m-%d')>=  DATE_FORMAT(#{collectEndDate}, '%Y-%m-%d')   ]]>
                </if>

            </trim>
        </where>
        order by ${orderBy} ${sort}
    </select>

    <select id="pageBatchBoundsCaseList" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select id, batch_no as batchNo,client,collect_area as collectArea,dept,odv,status,area,expect_time as expectTime,color,new_case as newCase,
        collect_status as collectStatus , collect_date as collectDate, account_age as accountAge ,seq_no as seqNo,case_date as caseDate,collect_hand as collectHand,
        real_repay_date as realRepayDate ,name as name ,card_no as cardNo,ident_no as identNo,DATE_FORMAT(distribute_time,'%Y-%m-%d %H:%i') as distributeTime,
        money as money,balance as balance,over_days as overDays,pro_repay_date as proPepayDate,distribute_history as distributeHistory,
        bank_amt as bankAmt,en_repay_amt as enRepayAmt,pro_repay_amt as proRepayAmt,comment,area,pro_repay_amt as proRepayAmt,collect_times as collectTimes
         from data_case where ident_no in (
        select da.ident_no
        from data_case da LEFT JOIN data_collection dc on da.id = dc.case_id
        <where>
            da.delete_flag = 0
            <trim suffixOverrides=",">
                <if test="idFlag != null and idFlag!=''">
                    and da.id in
                    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="cardNoFlag != null and cardNoFlag!=''">
                    and da.card_no in
                    <foreach item="item" index="index" collection="cardNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="seqNoFlag != null and seqNoFlag!=''">
                    and da.seq_no in
                    <foreach item="item" index="index" collection="seqNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="identNoFlag != null and identNoFlag!=''">
                    and da.ident_no in
                    <foreach item="item" index="index" collection="identNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="nameFlag != null and identNoFlag!=''">
                    and da.name in
                    <foreach item="item" index="index" collection="names" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="accountFlag != null and accountFlag!=''">
                    and da.account in
                    <foreach item="item" index="index" collection="accounts" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="archiveNoFlag != null and archiveNoFlag!=''">
                    and da.archive_no in
                    <foreach item="item" index="index" collection="archiveNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="clientFlag != null and clientFlag!=''">
                    and da.client in
                    <foreach item="item" index="index" collection="client" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="batchNoFlag != null and batchNoFlag!=''">
                    and da.batch_no in
                    <foreach item="item" index="index" collection="batchNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="odvFlag != null and odvFlag!=''">
                    and da.odv in
                    <foreach item="item" index="index" collection="odvs" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="vin != null and vin!=''">
                    and da.vin = #{vin}
                </if>
                <if test="license != null and license!=''">
                    and da.license = #{license}
                </if>
                <if test="collectHand != null and collectHand!=''">
                    and da.collect_hand = #{collectHand}
                </if>
                <if test="name != null and name!=''">
                    and da.name = #{name}
                </if>
                <if test="archiveNo != null and archiveNo!=''">
                    and da.archive_no = #{archiveNo}
                </if>
                <if test="account != null and account!=''">
                    and da.account = #{account}
                </if>
                <if test="bank != null and bank!=''">
                    and da.bank = #{bank}
                </if>
                <if test="idStr != null and idStr!=''">
                    and da.id = #{idStr}
                </if>
                <if test="moneyStart != null and moneyStart!=''">
                    <![CDATA[   and da.money>=  #{moneyStart}  ]]>
                </if>
                <if test="moneyEnd != null and moneyEnd!=''" >
                    <![CDATA[   and da.money <=  #{moneyEnd}   ]]>
                </if>
                <if test="overDays != null and overDays!=''">
                    and da.over_days = #{overDays}
                </if>
                <if test="cardNo != null and cardNo!=''">
                    and da.card_no = #{cardNo}
                </if>
                <if test="seqNo != null and seqNo!=''">
                    and da.seq_no = #{seqNo}
                </if>
                <if test="collectInfo != null and collectInfo!=''">
                    and dc.collectInfo = #{collectInfo}
                </if>
                <if test="batchNo != null and batchNo!=''">
                    and dc.batch_no = #{batchNo}
                </if>
                <if test="dept != null and dept!=''">
                    and da.dept = #{dept}
                </if>
                <if test="reduceStatus != null and reduceStatus!=''">
                    and da.reduce_status = #{reduceStatus}
                </if>
                <if test="status != null and status!=''">
                    and da.status = #{status}
                </if>
                <if test="accountAge != null and accountAge!=''">
                    and da.account_age = #{accountAge}
                </if>
                <if test="collectStatus != null and collectStatus!=''">
                    and dc.collect_status = #{collectStatus}
                </if>
                <if test="color != null and color!=''">
                    and da.color = #{color}
                </if>
                <if test="area != null and area!=''">
                    and da.area = #{area}
                </if>
                <if test="caseType != null and caseType!=''">
                    and da.case_type = #{caseType}
                </if>
                <if test="distributeStatus != null and distributeStatus!=''">
                    and da.distribute_status = #{distributeStatus}
                </if>

                <if test="collectArea != null and collectArea!=''">
                    and da.collect_area = #{collectArea}
                </if>
                <if test="repayDateStart != null and repayDateStart!=''">
                    <![CDATA[   and DATE_FORMATd(da.repay_date, '%Y-%m-%d')>=  DATE_FORMAT(#{repayDateStart}, '%Y-%m-%d')   ]]>
                </if>
                <if test="repayDateEnd != null and repayDateEnd!=''" >
                    <![CDATA[   and DATE_FORMAT(da.repay_date, '%Y-%m-%d')<=  DATE_FORMAT(#{repayDateEnd}, '%Y-%m-%d')   ]]>
                </if>
                <if test="caseDateStart != null and caseDateStart!=''">
                    <![CDATA[   and DATE_FORMAT(da.case_date, '%Y-%m-%d')>=  DATE_FORMAT(#{caseDateStart}, '%Y-%m-%d')   ]]>
                </if>
                <if test="caseDateEnd != null and caseDateEnd!=''" >
                    <![CDATA[   and DATE_FORMAT(da.case_date, '%Y-%m-%d')<=  DATE_FORMAT(#{caseDateEnd}, '%Y-%m-%d')   ]]>
                </if>
                <if test="expectStartTime != null and expectStartTime!=''">
                    <![CDATA[   and DATE_FORMAT(da.expect_time, '%Y-%m-%d')>=  DATE_FORMAT(#{expectStartTime}, '%Y-%m-%d')   ]]>
                </if>
                <if test="expectEndTime != null and expectEndTime!=''" >
                    <![CDATA[   and DATE_FORMAT(da.expect_time, '%Y-%m-%d')<=  DATE_FORMAT(#{expectEndTime}, '%Y-%m-%d')   ]]>
                </if>
                <if test="realReturnStartTime != null and realReturnStartTime!=''">
                    <![CDATA[   and DATE_FORMAT(da.real_return_time, '%Y-%m-%d')>=  DATE_FORMAT(#{realReturnStartTime}, '%Y-%m-%d')   ]]>
                </if>
                <if test="realReturnEndTime != null and realReturnEndTime!=''" >
                    <![CDATA[   and DATE_FORMAT(da.real_return_time, '%Y-%m-%d')<=  DATE_FORMAT(#{realReturnEndTime}, '%Y-%m-%d')   ]]>
                </if>
                <if test="collectStartDate != null and collectStartDate!=''">
                    <![CDATA[   and DATE_FORMAT(da.collect_date, '%Y-%m-%d')>=  DATE_FORMAT(#{collectStartDate}, '%Y-%m-%d')   ]]>
                </if>
                <if test="collectEndDate != null and collectEndDate!=''" >
                    <![CDATA[   and DATE_FORMAT(da.collect_date, '%Y-%m-%d')>=  DATE_FORMAT(#{collectEndDate}, '%Y-%m-%d')   ]]>
                </if>
            </trim>
        </where>
        order by ${orderBy} ${sort}
        )
    </select>


    <!--催收模块-我的案件-列表查询-->
    <select id="pageCaseInfo" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
        da.collect_status as collectStatus , da.account_age as accountAge ,da.seq_no as seqNo,da.case_date as caseDate,
        da.real_repay_date as realRepayDate ,da.name as name ,da.card_no as cardo,da.ident_no as identNo,
        da.money as money,da.balance as balance,da.over_days as overDays,da.pro_repay_date as proPepayDate,
        da.bank_amt as bankAmt,dc.collect_info as collectInfo
        from data_case da LEFT JOIN data_collection dc on da.id = dc.case_id
        <where>
            1 = 1
            <trim suffixOverrides=",">
                <if test="client != null and client!=''">
                    and da.client = #{client}
                </if>
                <if test="batchNo != null and batchNo!=''">
                    and da.batch_no = #{batchNo}
                </if>
                <if test="seqNo != null and seqNo!=''">
                    and da.seq_no = #{seqNo}
                </if>
                <if test="name != null and name!=''">
                    and da.name = #{name}
                </if>
                <if test="identNo != null and identNo!=''">
                    and da.ident_no = #{identNo}
                </if>
                <if test="accountAge != null and accountAge!=''">
                    and da.account_age = #{accountAge}
                </if>
                <if test="account != null and account!=''">
                    and da.account = #{account}
                </if>
                <if test="status != null and status!=''">
                    and da.status = #{status}
                </if>
                <if test="collectStatus != null and collectStatus!=''">
                    and da.collect_status = #{collectStatus}
                </if>
                <if test="caseType != null and caseType!=''">
                    and da.case_type = #{caseType}
                </if>
                <if test="color != null and color!=''">
                    and da.color = #{color}
                </if>
                <if test="cardNo != null and cardNo!=''">
                    and da.card_no = #{cardNo}
                </if>
                <if test="archiveNo != null and archiveNo!=''">
                    and da.archive_no = #{archiveNo}
                </if>
                <if test="newCase != null and newCase!=''">
                    and da.new_case = #{newCase}
                </if>
                <if test="repayStatus != null and repayStatus!=''">
                    and da.repay_status = #{repayStatus}
                </if>
                <if test="reduceStatus != null and reduceStatus!=''">
                    and da.reduce_status = #{reduceStatus}
                </if>
                <if test="reportStatus != null and reportStatus!=''">
                    and da.report_status = #{reportStatus}
                </if>

                <if test="caseDateStart != null and caseDateStart!=''">
                    <![CDATA[   and DATE_FORMAT(da.case_date, '%Y-%m-%d')>=  DATE_FORMAT(#{caseDateStart}, '%Y-%m-%d')   ]]>
                </if>
                <if test="caseDateEnd != null and caseDateEnd!=''" >
                    <![CDATA[   and DATE_FORMAT(da.case_date, '%Y-%m-%d')<=  DATE_FORMAT(#{caseDateEnd}, '%Y-%m-%d')   ]]>
                </if>
                <if test="repayDateStart != null and repayDateStart!=''">
                    <![CDATA[   and DATE_FORMATd(da.repay_date, '%Y-%m-%d')>=  DATE_FORMAT(#{repayDateStart}, '%Y-%m-%d')   ]]>
                </if>
                <if test="repayDateEnd != null and repayDateEnd!=''" >
                    <![CDATA[   and DATE_FORMAT(da.repay_date, '%Y-%m-%d')<=  DATE_FORMAT(#{repayDateEnd}, '%Y-%m-%d')   ]]>
                </if>
                <if test="moneyStart != null and moneyStart!=''">
                    <![CDATA[   and DATE_FORMAT(da.money, '%Y-%m-%d')>=  DATE_FORMAT(#{moneyStart}, '%Y-%m-%d')   ]]>
                </if>
                <if test="moneyEnd != null and moneyEnd!=''" >
                    <![CDATA[   and DATE_FORMAT(da.money, '%Y-%m-%d')<=  DATE_FORMAT(#{moneyEnd}, '%Y-%m-%d')   ]]>
                </if>

                <if test="realRepayDateStart != null and realRepayDateStart!=''">
                    <![CDATA[   and DATE_FORMAT(da.real_return_time, '%Y-%m-%d')>=  DATE_FORMAT(#{realRepayDateStart}, '%Y-%m-%d')   ]]>
                </if>
                <if test="realRepayDateEnd != null and realRepayDateEnd!=''" >
                    <![CDATA[   and DATE_FORMAT(da.real_return_time, '%Y-%m-%d')<=  DATE_FORMAT(#{realRepayDateEnd}, '%Y-%m-%d')   ]]>
                </if>
            </trim>
        </where>
    </select>

    <!--统计金额-->
    <select id="sumCaseMoney" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
        id
        from data_case
        <where>
            <trim suffixOverrides=",">
                <if test="remark != null and remark!=''">
                    remark like CONCAT('%',#{remark},'%')
                </if>
            </trim>
        </where>
    </select>

    <update id="sendOdv" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set odv = #{odv},distribute_history=concat(distribute_history,#{distributeHistory}),distribute_time=now()
        where id = #{id}
    </update>

    <update id="updateStatus" parameterType="java.lang.Integer">
        update data_case set status = #{status}
        where id = #{id}
    </update>

    <update id="addComment" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set comment = #{comment}
        where id = #{id}
    </update>


    <update id="updateComment" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set
        <trim suffixOverrides=",">
            <if test="comment != null">comment = #{comment},</if>
            <if test="color != null">color = #{color},</if>
        </trim>
        where seq_no = #{seqNo}
    </update>

    <update id="addColor" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set color = #{color}
        where id = #{id}
    </update>
    <update id="addImportant" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set important = #{important}
        where id = #{id}
    </update>
    <update id="addCollectStatus" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set collect_status = #{collectStatus}
        where id = #{id}
    </update>
    <update id="addCollectArea" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set collect_area = #{collectArea}
        where id = #{id}
    </update>
    <update id="addMValue" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set m_val = #{mVal}
        where id = #{id}
    </update>
    <update id="addSynergy" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set synergy = 2,synergy_date = now(),synergy_context =#{synergyContext},synergy_type=#{synergyType}
        where id = #{id}
    </update>
    <!--数据模块-按照查询分配业务员-->
    <select id="sendOdvByProperty" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
          update data_case set odv = #{odv},distribute_history=concat(distribute_history,#{distributeHistory}),distribute_time=now()
          where id in
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--催收模块-主管协催-列表查询-->
    <select id="pageSynergyInfo" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
         id, synergy_context as synergyContext,seq_no as seqNo,odv,DATE_FORMAT(synergy_date,'%Y-%m-%d %H:%i:%S') as synergyDate
        from data_case
        <where>
            synergy = #{synergy}
            <trim suffixOverrides=",">
                <if test="dept != null and dept!=''">
                    and dept = #{dept}
                </if>
                <if test="odv != null and odv!=''">
                    and odv = #{odv}
                </if>
                <if test="client != null and client!=''">
                    and client = #{client}
                </if>
                <if test="synergyStartTime != null and synergyStartTime!=''">
                    <![CDATA[   and DATE_FORMAT(synergy_date, '%Y-%m-%d')>=  DATE_FORMAT(#{synergyStartTime}, '%Y-%m-%d')   ]]>
                </if>
                <if test="synergyEndTime != null and synergyEndTime!=''" >
                    <![CDATA[   and DATE_FORMAT(synergy_date, '%Y-%m-%d')<=  DATE_FORMAT(#{synergyEndTime}, '%Y-%m-%d')   ]]>
                </if>
            </trim>
        </where>
    </select>

    <select id="countSynergyInfo" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="java.lang.Integer">
        select
        count(id) as num
        from data_case
        <where>
            synergy = #{synergy}
            <trim suffixOverrides=",">
                <if test="dept != null and dept!=''">
                    and dept = #{dept}
                </if>
                <if test="odv != null and odv!=''">
                    and odv = #{odv}
                </if>
                <if test="client != null and client!=''">
                    and client = #{client}
                </if>
                <if test="synergyStartTime != null and synergyStartTime!=''">
                    <![CDATA[   and DATE_FORMAT(synergy_date, '%Y-%m-%d')>=  DATE_FORMAT(#{synergyStartTime}, '%Y-%m-%d')   ]]>
                </if>
                <if test="synergyEndTime != null and synergyEndTime!=''" >
                    <![CDATA[   and DATE_FORMAT(synergy_date, '%Y-%m-%d')<=  DATE_FORMAT(#{synergyEndTime}, '%Y-%m-%d')   ]]>
                </if>
            </trim>
        </where>
    </select>

    <update id="updateSynergy" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set synergy = #{synergy}
        where id = #{id}
    </update>



    <select id="pageCaseTel" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
        t.id,t.seq_no as seqNo,t.name,t.card_no as cardNo,t.money,t.case_date as caseDate,t.collect_status as collectStatus,t.collect_date as collectDate,
        t.pro_repay_amt as proRepayAmt,t.en_repay_amt as enRepayAmt,t.account_age as accountAge,t.odv
        from data_case t LEFT JOIN data_case_tel l on t.id = l.case_id
                      LEFT  JOIN data_case_address d on t.id = d.case_id
        <where>
            <trim suffixOverrides=",">
                <if test="clientFlag != null and clientFlag!='' and queryMethod=='1'.toString()" >
                    and t.client in
                    <foreach item="item" index="index" collection="clients" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="name != null and name!='' and queryMethod=='1'.toString()">
                    and t.name = #{name}
                </if>
                <if test="cardNo != null and cardNo!='' and queryMethod=='1'.toString()">
                    and t.card_no = #{cardNo}
                </if>
                <if test="unitName != null and unitName!='' and queryMethod=='1'.toString()">
                    and t.unit_name = #{unitName}
                </if>
                <if test="identNo != null and identNo!='' and queryMethod=='1'.toString()">
                    and t.ident_no = #{identNo}
                </if>
                <if test="address != null and address!='' and queryMethod=='1'.toString()">
                    and d.address = #{address}
                </if>
                <if test="tel != null and tel!='' and queryMethod=='1'.toString()">
                    and l.tel = #{tel}
                </if>
                <if test="clientFlag != null and clientFlag!='' and queryMethod=='2'.toString()" >
                    and t.client in
                    <foreach item="item" index="index" collection="clients" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="name != null and name!='' and queryMethod=='2'.toString()">
                    AND t.name like CONCAT('%',#{name},'%')
                </if>
                <if test="cardNo != null and cardNo!='' and queryMethod=='2'.toString()">
                    AND t.card_no like CONCAT('%',#{cardNo},'%')
                </if>
                <if test="unitName != null and unitName!='' and queryMethod=='2'.toString()">
                    AND t.unit_name like CONCAT('%',#{unitName},'%')
                </if>
                <if test="identNo != null and identNo!='' and queryMethod=='2'.toString()">
                    AND t.ident_no like CONCAT('%',#{identNo},'%')
                </if>
                <if test="address != null and address!='' and queryMethod=='2'.toString()">
                    AND d.address like CONCAT('%',#{address},'%')
                </if>
                <if test="tel != null and tel!='' and queryMethod=='2'.toString()">
                    AND l.tel like CONCAT('%',#{tel},'%')
                </if>
            </trim>
        </where>
        order by ${orderBy} ${sort}
    </select>

    <select id="countCaseTel" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="java.lang.Integer">
        select
        count(id) as sum
        from data_case t LEFT JOIN data_case_tel l on t.id = l.case_id
        LEFT  JOIN data_case_address d on t.id = d.case_id
        <where>
            <trim suffixOverrides=",">
                <if test="client != null and client!='' and queryMethod='1'">
                    and t.client = #{client}
                </if>
                <if test="name != null and name!='' and queryMethod='1'">
                    and t.name = #{name}
                </if>
                <if test="cardNo != null and cardNo!='' and queryMethod='1'">
                    and t.card_no = #{cardNo}
                </if>
                <if test="unitName != null and unitName!='' and queryMethod='1'">
                    and t.unit_name = #{unitName}
                </if>
                <if test="identNo != null and identNo!='' and queryMethod='1'">
                    and t.ident_no = #{identNo}
                </if>
                <if test="address != null and address!='' and queryMethod='1'">
                    and d.address = #{address}
                </if>
                <if test="tel != null and tel!='' and queryMethod='1'">
                    and l.address = #{tel}
                </if>

                <if test="client != null and client!='' and queryMethod='2'">
                    AND t.client like CONCAT('%',#{client},'%')
                </if>
                <if test="name != null and name!='' and queryMethod='2'">
                    AND t.name like CONCAT('%',#{name},'%')
                </if>
                <if test="cardNo != null and cardNo!='' and queryMethod='2'">
                    AND t.card_no like CONCAT('%',#{cardNo},'%')
                </if>
                <if test="unitName != null and unitName!='' and queryMethod='2'">
                    AND t.unit_name like CONCAT('%',#{unitName},'%')
                </if>
                <if test="identNo != null and identNo!='' and queryMethod='2'">
                    AND t.ident_no like CONCAT('%',#{identNo},'%')
                </if>
                <if test="address != null and address!='' and queryMethod='2'">
                    AND d.address like CONCAT('%',#{address},'%')
                </if>
                <if test="tel != null and tel!='' and queryMethod='2'">
                    AND l.tel like CONCAT('%',#{tel},'%')
                </if>
            </trim>
        </where>
    </select>



    <select id="listAllCaseInfo" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select da.id,da.card_no as cardNo,
        da.collect_status as collectStatus , da.account_age as accountAge ,da.seq_no as seqNo,da.case_date as caseDate,
        da.real_repay_date as realRepayDate ,da.name as name ,da.card_no as cardo,da.ident_no as identNo,
        da.money as money,da.balance as balance,da.over_days as overDays,da.pro_repay_date as proPepayDate,
        da.bank_amt as bankAmt,da.batch_no as batchNo
        from data_case da
        where delete_flag = 0
        <if test="id != null and id!=''">
            and da.id = #{id}
        </if>
    </select>

    <select id="listBySeqNoSet" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
            id as id,
            seq_no as seqNo
        from data_case
        where delete_flag = 0
        and seq_no in
              <foreach collection="seqNoSet" open="(" close=")" separator="," item="item">
                  #{item}
              </foreach>
    </select>

    <update id="updateBySeqNo" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case
        set
            case_date = #{caseDate},
            money = #{money},
            case_deadline = #{caseDeadline},
            collect_hand = #{collectHand},
            rmb = #{rmb},
            hkd = #{hkd},
            foreign_currency = #{foreignCurrency},
            gender = #{gender},
            name = #{name},
            card_no = #{cardNo},
            ident_no = #{identNo},
            ident_type = #{identType},
            <if test="collectionUser != null and collectionUser.id != null">
                odv = #{collectionUser.id},
            </if>
            <if test="collectionArea != null and collectionArea.id != null">
                collection_area = #{collectionArea.id},
            </if>
            summary = #{collectInfo},
            m_val = #{mVal},
            commission_rate = #{commissionRate},
            commission_money = #{commissionMoney},
            home_tel_number = #{homeTelNumber},
            unit_tel_number = #{unitTelNumber},
            tel = #{tel},
            unit_name = #{unitName},
            case_user_position = #{caseUserPosition},
            case_user_depart = #{caseUserDepart},
            unit_address = #{unitAddress},
            unit_zip_code = #{unitZipCode},
            home_address = #{homeAddress},
            home_zip_code = #{homeZipCode},
            statement_address = #{statementAddress},
            statement_zip_code = #{statementZipCode},
            census_register_address = #{censusRegisterAddress},
            census_register_zip_code = #{censusRegisterZipCode},
            qq = #{qq},
            email = #{email},
            birthday = #{birthday},
            age = #{age},
            <if test="province != null and province.id != null">
                province = #{province.id},
            </if>
            <if test="city != null and city.id != null">
                city = #{city.id},
            </if>
            <if test="county != null and county.id != null">
                county = #{county.id},
            </if>
            expect_time = #{expectTime},
            goods = #{goods},
            commercial_tenant = #{commercialTenant},
            archive_no = #{archiveNo},
            apply_order_no = #{applyOrderNo},
            social_security_computer_no = #{socialSecurityComputerNo},
            social_security_card_no = #{socialSecurityCardNo},
            bank = #{bank},
            account_no = #{accountNo},
            account_name = #{accountName},
            card_type = #{cardType},
            principle = #{principle},
            loan_rate = #{loanRate},
            residual_principle = #{residualPrinciple},
            monthly_repayments = #{monthlyRepayments},
            minimum_payment = #{minimumPayment},
            credit_line = #{creditLine},
            fixed_quota = #{fixedQuota},
            default_level = #{defaultLevel},
            last_repay_money = #{lastRepayMoney},
            last_repay_date = #{lastRepayDate},
            last_consume_date = #{lastConsumeDate},
            last_withdraw_date = #{lastWithdrawDate},
            stop_card_date = #{stopCardDate},
            active_card_date = #{activeCardDate},
            bill_date = #{billDate},
            bill_cycle = #{billCycle},
            outstanding_amount = #{outstandingAmount},
            main_deputy_card = #{mainDeputyCard},
            deputy_card_user_name = #{deputyCardUserName},
            loan_date = #{loanDate},
            loan_deadline = #{loanDeadline},
            overdue_date = #{overdueDate},
            overdue_periods = #{overduePeriods},
            overdue_days = #{overdueDays},
            overdue_times = #{overdueTimes},
            entrust_periods = #{entrustPeriods},
            repay_deadline = #{repayDeadline},
            repaid_periods = #{repaidPeriods},
            loan_type = #{loanType},
            collection_type = #{collectionType},
            overdue_money = #{overdueMoney},
            overdue_principle = #{overduePrinciple},
            overdue_interest = #{overdueInterest},
            overdue_management_cost = #{overdueManagementCost},
            overdue_default_interest = #{overdueDefaultInterest},
            penalty = #{penalty},
            late_fee = #{lateFee},
            overrun_fee = #{overrunFee},
            bail = #{bail},
            currency_type = #{currencyType},
            last_collection_record = #{lastCollectionRecord},
            overdue_bill_time = #{overdueBillTime},
            contract_no = #{contractNo},
            over_days = #{overDays},
            dealer = #{dealer},
            apply_date = #{applyDate},
            repay_date = #{repayDate},
            policy_expiry_date = #{policyExpiryDate},
            card_price = #{cardPrice},
            card_model = #{cardModel},
            license = #{license},
            brand = #{brand},
            vin = #{vin},
            engine_no = #{engineNo}
            where seq_no = #{seqNo}
    </update>

    <insert id="saveCase" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into data_case
        (
        seq_no,
        case_date,
        money,
        client,
        case_deadline,
        collect_hand,
        rmb,
        hkd,
        foreign_currency,
        gender,
        name,
        card_no,
        ident_no,
        ident_type,
        <if test="collectionUser != null and collectionUser.id != null">
            odv,
        </if>
        <if test="collectionArea != null and collectionArea.id != null">
            collection_area,
        </if>
        summary,
        m_val,
        commission_rate,
        commission_money,
        home_tel_number,
        unit_tel_number,
        tel,
        unit_name,
        case_user_position,
        case_user_depart,
        unit_address,
        unit_zip_code,
        home_address,
        home_zip_code,
        statement_address,
        statement_zip_code,
        census_register_address,
        census_register_zip_code,
        qq,
        email,
        birthday,
        age,
        <if test="province != null and province.id != null">
            province,
        </if>
        <if test="city != null and city.id != null">
            city,
        </if>
        <if test="county != null and county.id != null">
            county,
        </if>
        expect_time,
        goods,
        commercial_tenant,
        archive_no,
        apply_order_no,
        social_security_computer_no,
        social_security_card_no,
        bank,
        account,
        account_name,
        card_type,
        principle,
        loan_rate,
        residual_principle,
        monthly_repayments,
        minimum_payment,
        credit_line,
        fixed_quota,
        default_level,
        last_repay_money,
        last_repay_date,
        last_consume_date,
        last_withdraw_date,
        stop_card_date,
        active_card_date,
        bill_date,
        bill_cycle,
        outstanding_amount,
        main_deputy_card,
        deputy_card_user_name,
        loan_date,
        loan_deadline,
        overdue_date,
        overdue_periods,
        overdue_days,
        overdue_times,
        entrust_periods,
        repay_deadline,
        repaid_periods,
        loan_type,
        collection_type,
        overdue_money,
        overdue_principle,
        overdue_interest,
        overdue_management_cost,
        overdue_default_interest,
        penalty,
        late_fee,
        overrun_fee,
        bail,
        currency_type,
        last_collection_record,
        account_age,
        contract_no,
        over_days,
        dealer,
        apply_date,
        repay_date,
        policy_expiry_date,
        card_price,
        card_model,
        license,
        brand,
        vin,
        engine_no,
        batch_no,
        distribute_history,
        collect_times
        )
        values
        (
        #{seqNo},
        #{caseDate},
        #{money},
        #{client},
        #{caseDeadline},
        #{collectHand},
        #{rmb},
        #{hkd},
        #{foreignCurrency},
        #{gender},
        #{name},
        #{cardNo},
        #{identNo},
        #{identType},
        <if test="collectionUser != null and collectionUser.id != null">
            #{collectionUser.id},
        </if>
        <if test="collectionArea != null and collectionArea.id != null">
            #{collectionArea.id},
        </if>
        #{collectInfo},
        #{mVal},
        #{commissionRate},
        #{commissionMoney},
        #{homeTelNumber},
        #{unitTelNumber},
        #{tel},
        #{unitName},
        #{caseUserPosition},
        #{caseUserDepart},
        #{unitAddress},
        #{unitZipCode},
        #{homeAddress},
        #{homeZipCode},
        #{statementAddress},
        #{statementZipCode},
        #{censusRegisterAddress},
        #{censusRegisterZipCode},
        #{qq},
        #{email},
        #{birthday},
        #{age},
        <if test="province != null and province.id != null">
            #{province.id},
        </if>
        <if test="city != null and city.id != null">
            #{city.id},
        </if>
        <if test="county != null and county.id != null">
            #{county.id},
        </if>
        #{expectTime},
        #{goods},
        #{commercialTenant},
        #{archiveNo},
        #{applyOrderNo},
        #{socialSecurityComputerNo},
        #{socialSecurityCardNo},
        #{bank},
        #{account},
        #{accountName},
        #{cardType},
        #{principle},
        #{loanRate},
        #{residualPrinciple},
        #{monthlyRepayments},
        #{minimumPayment},
        #{creditLine},
        #{fixedQuota},
        #{defaultLevel},
        #{lastRepayMoney},
        #{lastRepayDate},
        #{lastConsumeDate},
        #{lastWithdrawDate},
        #{stopCardDate},
        #{activeCardDate},
        #{billDate},
        #{billCycle},
        #{outstandingAmount},
        #{mainDeputyCard},
        #{deputyCardUserName},
        #{loanDate},
        #{loanDeadline},
        #{overdueDate},
        #{overduePeriods},
        #{overdueDays},
        #{overdueTimes},
        #{entrustPeriods},
        #{repayDeadline},
        #{repaidPeriods},
        #{loanType},
        #{collectionType},
        #{overdueMoney},
        #{overduePrinciple},
        #{overdueInterest},
        #{overdueManagementCost},
        #{overdueDefaultInterest},
        #{penalty},
        #{lateFee},
        #{overrunFee},
        #{bail},
        #{currencyType},
        #{lastCollectionRecord},
        #{accountAge},
        #{contractNo},
        #{overDays},
        #{dealer},
        #{applyDate},
        #{repayDate},
        #{policyExpiryDate},
        #{cardPrice},
        #{cardModel},
        #{license},
        #{brand},
        #{vin},
        #{engineNo},
        #{batchNo},
        '',
        0
        )
    </insert>

    <select id="selectCaseList" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
               <!--
               da.id, da.batch_no as batchNo,da.client,da.collect_area as collectArea,da.dept,da.odv,da.status,da.area,da.expect_time as expectTime,
        da.collect_status as collectStatus , da.collect_date as collectDate,  da.account_age as accountAge ,da.seq_no as seqNo,da.case_date as caseDate,da.collect_hand as collectHand,
        da.real_repay_date as realRepayDate ,da.name as name ,da.card_no as cardNo,da.ident_no as identNo,DATE_FORMAT(da.distribute_time,'%Y-%m-%d') as distributeTime,
        da.money as money,da.balance as balance,da.over_days as overDays,da.pro_repay_date as proPepayDate,da.distribute_history as distributeHistory,
        da.bank_amt as bankAmt,da.en_repay_amt as enRepayAmt,da.pro_repay_amt as proRepayAmt,da.comment,da.area,da.pro_repay_amt as proRepayAmt
        -->
        <include refid="colSql"/>
        from data_case da LEFT JOIN data_collection dc on da.id = dc.case_id
        where   da.id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectDataCaseExportByBatch" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
        <include refid="colSql"/>
        from data_case da LEFT JOIN data_collection dc on da.id = dc.case_id
        where   da.batch_no = #{batchNo}
        order by ${orderBy} ${sort}
    </select>

    <select id="totalCaseList" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
               <!--
               da.id, da.batch_no as batchNo,da.client,da.collect_area as collectArea,da.dept,da.odv,da.status,da.area,da.expect_time as expectTime,
        da.collect_status as collectStatus , da.collect_date as collectDate,  da.account_age as accountAge ,da.seq_no as seqNo,da.case_date as caseDate,da.collect_hand as collectHand,
        da.real_repay_date as realRepayDate ,da.name as name ,da.card_no as cardNo,da.ident_no as identNo,DATE_FORMAT(da.distribute_time,'%Y-%m-%d') as distributeTime,
        da.money as money,da.balance as balance,da.over_days as overDays,da.pro_repay_date as proPepayDate,da.distribute_history as distributeHistory,
        da.bank_amt as bankAmt,da.en_repay_amt as enRepayAmt,da.pro_repay_amt as proRepayAmt,da.comment,da.area,da.pro_repay_amt as proRepayAmt
        -->
        <include refid="colSql"/>
        from data_case da LEFT JOIN data_collection dc on da.id = dc.case_id
        <where>
            1 = 1
            <trim suffixOverrides=",">
                <if test="idFlag != null and idFlag!=''">
                    and da.id in
                    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="cardNoFlag != null and cardNoFlag!=''">
                    and da.card_no in
                    <foreach item="item" index="index" collection="cardNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="seqNoFlag != null and seqNoFlag!=''">
                    and da.seq_no in
                    <foreach item="item" index="index" collection="seqNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="identNoFlag != null and identNoFlag!=''">
                    and da.ident_no in
                    <foreach item="item" index="index" collection="identNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="nameFlag != null and identNoFlag!=''">
                    and da.name in
                    <foreach item="item" index="index" collection="names" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="accountFlag != null and accountFlag!=''">
                    and da.account in
                    <foreach item="item" index="index" collection="accounts" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="archiveNoFlag != null and archiveNoFlag!=''">
                    and da.archive_no in
                    <foreach item="item" index="index" collection="archiveNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="clientFlag != null and clientFlag!=''">
                    and da.client in
                    <foreach item="item" index="index" collection="clients" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="batchNoFlag != null and batchNoFlag!=''">
                    and da.batch_no in
                    <foreach item="item" index="index" collection="batchNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="odvFlag != null and odvFlag!=''">
                    and da.odv in
                    <foreach item="item" index="index" collection="odvs" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="dept != null and dept!=''">
                    and da.dept = #{dept}
                </if>

                <if test="accountAge != null and accountAge!=''">
                    and da.account_age = #{accountAge}
                </if>

                <if test="collectArea != null and collectArea!=''">
                    and da.collect_area = #{collectArea}
                </if>
                <if test="overDays != null and overDays!=''">
                    and da.over_days = #{overDays}
                </if>
                <if test="area != null and area!=''">
                    and da.area = #{area}
                </if>
                <if test="license != null and license!=''">
                    and da.license = #{license}
                </if>
                <if test="expectStartTime != null and expectStartTime!=''">
                    <![CDATA[   and DATE_FORMAT(da.expect_time, '%Y-%m-%d')>=  DATE_FORMAT(#{expectStartTime}, '%Y-%m-%d')   ]]>
                </if>
                <if test="expectEndTime != null and expectEndTime!=''" >
                    <![CDATA[   and DATE_FORMAT(da.expect_time, '%Y-%m-%d')<=  DATE_FORMAT(#{expectEndTime}, '%Y-%m-%d')   ]]>
                </if>

                <if test="collectHand != null and collectHand!=''">
                    and da.collect_hand = #{collectHand}
                </if>
                <if test="distributeStatus != null and distributeStatus!=''">
                    and da.distribute_status = #{distributeStatus}
                </if>

                <if test="vin != null and vin!=''">
                    and da.vin = #{vin}
                </if>

                <if test="status != null and status!=''">
                    and da.status = #{status}
                </if>
                <if test="bank != null and bank!=''">
                    and da.bank = #{bank}
                </if>
                <if test="collectStartDate != null and collectStartDate!=''">
                    <![CDATA[   and DATE_FORMAT(da.collect_date, '%Y-%m-%d')>=  DATE_FORMAT(#{collectStartDate}, '%Y-%m-%d')   ]]>
                </if>
                <if test="collectEndDate != null and collectEndDate!=''" >
                    <![CDATA[   and DATE_FORMAT(da.collect_date, '%Y-%m-%d')>=  DATE_FORMAT(#{collectEndDate}, '%Y-%m-%d')   ]]>
                </if>
                <if test="collectInfo != null and collectInfo!=''">
                    and dc.collectInfo = #{collectInfo}
                </if>
                <if test="collectStatus != null and collectStatus!=''">
                    and dc.collect_status = #{collectStatus}
                </if>
                <if test="caseType != null and caseType!=''">
                    and da.case_type = #{caseType}
                </if>
                <if test="color != null and color!=''">
                    and da.color = #{color}
                </if>

                <if test="caseDateStart != null and caseDateStart!=''">
                    <![CDATA[   and DATE_FORMAT(da.case_date, '%Y-%m-%d')>=  DATE_FORMAT(#{caseDateStart}, '%Y-%m-%d')   ]]>
                </if>
                <if test="caseDateEnd != null and caseDateEnd!=''" >
                    <![CDATA[   and DATE_FORMAT(da.case_date, '%Y-%m-%d')<=  DATE_FORMAT(#{caseDateEnd}, '%Y-%m-%d')   ]]>
                </if>
                <if test="repayDateStart != null and repayDateStart!=''">
                    <![CDATA[   and DATE_FORMATd(da.repay_date, '%Y-%m-%d')>=  DATE_FORMAT(#{repayDateStart}, '%Y-%m-%d')   ]]>
                </if>
                <if test="repayDateEnd != null and repayDateEnd!=''" >
                    <![CDATA[   and DATE_FORMAT(da.repay_date, '%Y-%m-%d')<=  DATE_FORMAT(#{repayDateEnd}, '%Y-%m-%d')   ]]>
                </if>
                <if test="moneyStart != null and moneyStart!=''">
                    <![CDATA[   and da.money>=  #{moneyStart}  ]]>
                </if>
                <if test="moneyEnd != null and moneyEnd!=''" >
                    <![CDATA[   and da.money <=  #{moneyEnd}   ]]>
                </if>

                <if test="realReturnStartTime != null and realReturnStartTime!=''">
                    <![CDATA[   and DATE_FORMAT(da.real_return_time, '%Y-%m-%d')>=  DATE_FORMAT(#{realReturnStartTime}, '%Y-%m-%d')   ]]>
                </if>
                <if test="realReturnEndTime != null and realReturnEndTime!=''" >
                    <![CDATA[   and DATE_FORMAT(da.real_return_time, '%Y-%m-%d')<=  DATE_FORMAT(#{realReturnEndTime}, '%Y-%m-%d')   ]]>
                </if>
            </trim>
        </where>
        order by ${orderBy} ${sort}
    </select>


    <select id="totalBatchBoundsCaseList" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
         <include refid="colSql"/>
         from data_case where ident_no in (
        select da.ident_no
        from data_case da LEFT JOIN data_collection dc on da.id = dc.case_id
        <where>
            1 = 1
            <trim suffixOverrides=",">
                <if test="idFlag != null and idFlag!=''">
                    and da.id in
                    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="cardNoFlag != null and cardNoFlag!=''">
                    and da.card_no in
                    <foreach item="item" index="index" collection="cardNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="seqNoFlag != null and seqNoFlag!=''">
                    and da.seq_no in
                    <foreach item="item" index="index" collection="seqNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="identNoFlag != null and identNoFlag!=''">
                    and da.ident_no in
                    <foreach item="item" index="index" collection="identNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="nameFlag != null and identNoFlag!=''">
                    and da.name in
                    <foreach item="item" index="index" collection="names" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="accountFlag != null and accountFlag!=''">
                    and da.account in
                    <foreach item="item" index="index" collection="accounts" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="archiveNoFlag != null and archiveNoFlag!=''">
                    and da.archive_no in
                    <foreach item="item" index="index" collection="archiveNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="clientFlag != null and clientFlag!=''">
                    and da.client in
                    <foreach item="item" index="index" collection="client" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="batchNoFlag != null and batchNoFlag!=''">
                    and da.batch_no in
                    <foreach item="item" index="index" collection="batchNos" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="odvFlag != null and odvFlag!=''">
                    and da.odv in
                    <foreach item="item" index="index" collection="odvs" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="dept != null and dept!=''">
                    and da.dept = #{dept}
                </if>

                <if test="accountAge != null and accountAge!=''">
                    and da.account_age = #{accountAge}
                </if>
                <if test="collectArea != null and collectArea!=''">
                    and da.collect_area = #{collectArea}
                </if>
                <if test="overDays != null and overDays!=''">
                    and da.over_days = #{overDays}
                </if>
                <if test="area != null and area!=''">
                    and da.area = #{area}
                </if>
                <if test="license != null and license!=''">
                    and da.license = #{license}
                </if>
                <if test="expectStartTime != null and expectStartTime!=''">
                    <![CDATA[   and DATE_FORMAT(da.expect_time, '%Y-%m-%d')>=  DATE_FORMAT(#{expectStartTime}, '%Y-%m-%d')   ]]>
                </if>
                <if test="expectEndTime != null and expectEndTime!=''" >
                    <![CDATA[   and DATE_FORMAT(da.expect_time, '%Y-%m-%d')<=  DATE_FORMAT(#{expectEndTime}, '%Y-%m-%d')   ]]>
                </if>

                <if test="collectHand != null and collectHand!=''">
                    and da.collect_hand = #{collectHand}
                </if>
                <if test="distributeStatus != null and distributeStatus!=''">
                    and da.distribute_status = #{distributeStatus}
                </if>
                <if test="vin != null and vin!=''">
                    and da.vin = #{vin}
                </if>
                <if test="status != null and status!=''">
                    and da.status = #{status}
                </if>
                <if test="bank != null and bank!=''">
                    and da.bank = #{bank}
                </if>
                <if test="collectStartDate != null and collectStartDate!=''">
                    <![CDATA[   and DATE_FORMAT(da.collect_date, '%Y-%m-%d')>=  DATE_FORMAT(#{collectStartDate}, '%Y-%m-%d')   ]]>
                </if>
                <if test="collectEndDate != null and collectEndDate!=''" >
                    <![CDATA[   and DATE_FORMAT(da.collect_date, '%Y-%m-%d')>=  DATE_FORMAT(#{collectEndDate}, '%Y-%m-%d')   ]]>
                </if>
                <if test="collectInfo != null and collectInfo!=''">
                    and dc.collectInfo = #{collectInfo}
                </if>
                <if test="collectStatus != null and collectStatus!=''">
                    and dc.collect_status = #{collectStatus}
                </if>
                <if test="caseType != null and caseType!=''">
                    and da.case_type = #{caseType}
                </if>
                <if test="color != null and color!=''">
                    and da.color = #{color}
                </if>

                <if test="caseDateStart != null and caseDateStart!=''">
                    <![CDATA[   and DATE_FORMAT(da.case_date, '%Y-%m-%d')>=  DATE_FORMAT(#{caseDateStart}, '%Y-%m-%d')   ]]>
                </if>
                <if test="caseDateEnd != null and caseDateEnd!=''" >
                    <![CDATA[   and DATE_FORMAT(da.case_date, '%Y-%m-%d')<=  DATE_FORMAT(#{caseDateEnd}, '%Y-%m-%d')   ]]>
                </if>
                <if test="repayDateStart != null and repayDateStart!=''">
                    <![CDATA[   and DATE_FORMATd(da.repay_date, '%Y-%m-%d')>=  DATE_FORMAT(#{repayDateStart}, '%Y-%m-%d')   ]]>
                </if>
                <if test="repayDateEnd != null and repayDateEnd!=''" >
                    <![CDATA[   and DATE_FORMAT(da.repay_date, '%Y-%m-%d')<=  DATE_FORMAT(#{repayDateEnd}, '%Y-%m-%d')   ]]>
                </if>
                <if test="moneyStart != null and moneyStart!=''">
                    <![CDATA[   and DATE_FORMAT(da.money, '%Y-%m-%d')>=  DATE_FORMAT(#{moneyStart}, '%Y-%m-%d')   ]]>
                </if>
                <if test="moneyEnd != null and moneyEnd!=''" >
                    <![CDATA[   and DATE_FORMAT(da.money, '%Y-%m-%d')<=  DATE_FORMAT(#{moneyEnd}, '%Y-%m-%d')   ]]>
                </if>

                <if test="realReturnStartTime != null and realReturnStartTime!=''">
                    <![CDATA[   and DATE_FORMAT(da.real_return_time, '%Y-%m-%d')>=  DATE_FORMAT(#{realReturnStartTime}, '%Y-%m-%d')   ]]>
                </if>
                <if test="realReturnEndTime != null and realReturnEndTime!=''" >
                    <![CDATA[   and DATE_FORMAT(da.real_return_time, '%Y-%m-%d')<=  DATE_FORMAT(#{realReturnEndTime}, '%Y-%m-%d')   ]]>
                </if>
            </trim>
        </where>
        order by ${orderBy} ${sort}
        )
    </select>


    <select id="selectCaseTelListExport" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseTelExport" parameterType="java.util.List">
          SELECT d.seq_no as seqno,d.name,d.card_no as cardNo,d.ident_no as identNo,d.archive_no as archiveNo,d.account,d.account_age as accountAge,
              d.case_date as caseDate,t.name as telName,t.status as telStatusMsg,t.tel,t.tel_type as telType,t.relation,t.remark
          from data_case_tel t LEFT  JOIN data_case d on t.case_id = d.id
          where d.id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <select id="detail" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseDetail">
          select
        <include refid="colSql"/>
          from data_case da where da.id = #{id}
    </select>
    
    <update id="updateRemark" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" >

          update data_case set remark = #{remark} where id = #{id}

    </update>

    <select id="pageSeqNos" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select
        <include refid="colSql"/>
        from data_case da
        where da.delete_flag = 0
        <if test="seqNo != null and seqNo != ''">
            and da.seq_no like concat('%', #{seqNo}, '%')
        </if>
    </select>

    <select id="listSynergy" parameterType="java.util.List" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
          SELECT
            t.id,t.synergy,t.synergy_type as synergyType,t.synergy_context as synergyContext,t.synergy_date as synergyDate,t.odv,t.synergy_checker as synerCkecker,t.synergy_context as synerCheckContext,t.syner_check_time as synergyCheckTime
          from data_case t
          where t.synergy in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>

    </select>

    <select id="findById" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
          SELECT id,batch_no as batchNo,money,ident_no as identNo,seq_no as seqNo,archive_no as archiveNo,card_no as cardNo,case_date as caseDate,name from data_case where id = #{id}
    </select>

    <select id="findSameBatchCase" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
          select seq_no as seqNo,account,card_no as cardNo,money,currency_type as currencyType ,
          pro_repay_amt as proRepayAmt,bank_amt as bankAmt,en_repay_amt as enRepayAmt,account_age as accountAge,
          collect_date as collectDate
          from   data_case  where batch_no = #{batchNo} and ident_no = #{identNo}
    </select>

    <select id="findSameCase" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
          select t.id,t.batch_no as batchNo,t.seq_no as seqNo,t.case_date caseDate,t.card_no as cardNo,t.name,t.client,t.money,t.collect_status as collectStatus,
          t.odv,t.en_repay_amt as enRepayAmt
          from data_case t where t.ident_no in
          (select ident_no from data_case where id = #{id}) and  <![CDATA[ t.id <> #{id} ]]>
    </select>

    <update id="addCollectTimes" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set collect_times = collect_times+1 where id =#{id}
    </update>

    <update id="updateDataCaseByCollect" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
          update data_case set new_case=#{newCase},collect_times=collect_times+1 where id=#{id}
    </update>

    <update id="updateDataCaseByCollect2" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set new_case=#{newCase} where id=#{id}
    </update>

    <update id="updateDataCaseByCollect3" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set new_case=#{newCase},collect_date = #{collectDate} where id=#{id}
    </update>

    <update id="updateDataCaseByCollectAdd" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set new_case=#{newCase},collect_status=#{collectStatus},summary=#{summary},
        collect_times=collect_times+1
         where id=#{id}
    </update>

    <update id="updateDataCaseByCollectResult" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        update data_case set summary=#{summary} where id=#{id}
    </update>
    
    <select id="listByBatchNos" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity">
        select id from data_case where batch_no in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="countUserCase" parameterType="xyz.zaijushou.zhx.sys.entity.DataCaseEntity" resultType="java.lang.Integer">
        select
        count(id) as num
        from data_case
        where delete_flag = 0 and odv = #{odv}
    </select>
</mapper>