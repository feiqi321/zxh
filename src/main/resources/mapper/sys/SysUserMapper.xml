<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.zaijushou.zhx.sys.dao.SysUserMapper">

    <!-- 无密码等敏感信息返回 -->
    <sql id="colSqlWithoutPassword">
        id as id,
        username as userName,
        login_name as loginName,
        mobile as mobile,
        email as email,
        remark as remark,
        create_user as 'createUser.id',
        update_user as 'updateUser.id',
        create_time as createTime,
        update_time as updateTime,
        delete_flag as deleteFlag
    </sql>

    <!-- 无密码信息返回 -->
    <sql id="colSqlPasswordInfo">
        id as id,
        username as userName,
        login_name as loginName,
        password as password,
        mobile as mobile,
        email as email,
        last_login_fail_time as lastLoginFailTime,
        login_fail_times as loginFailTimes,
        remark as remark,
        create_user as 'createUser.id',
        update_user as 'updateUser.id',
        create_time as createTime,
        update_time as updateTime,
        delete_flag as deleteFlag
    </sql>

    <sql id="userInfo">
        id as id,
        username as userName,
        login_name as loginName,
        mobile as mobile,
        email as email,
        remark as remark,

        department,
        position,
        sex,
        high_edu as highEdu,
        user_type as userType,

        category,
        posi_title as posiTitle,
        come_resource as comeResource,
        join_time as joinTime,
        internship,

        plan_time as planTime,
        actual_time as actualTime,
        credit_time as creditTime,
        leave_time as leaveTime,
        yearly_salary as yearlySalary,

        security_number as securityNumber,
        fund_number as fundNumber,
        benefit,
        deposit_bank as depositBank,
        bank_number as bankNumber,

        idnumber,
        birth_time as birthTime,
        marry_status as marryStatus,
        political,
        nation,

        birth_origin as birthOrigin,
        household_address as householdAddress,
        household_nature as householdNature,
        graduation,
        edu_background as eduBackground,

        work_experience as workExperience,
        mobilization,
        office_phone as officePhone,
        qq,
        home_phone as homePhone,

        msn,
        address,
        status,

        create_user as 'createUser.id',
        update_user as 'updateUser.id',
        create_time as createTime,
        update_time as updateTime,
        delete_flag as deleteFlag
    </sql>

    <resultMap id="UserResultMap" type="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="number" property="number" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="officePhone" property="officePhone" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="enable" property="enable" jdbcType="INTEGER"/>
        <result column="userName" property="userName" jdbcType="VARCHAR"/>
        <result column="department" property="department" jdbcType="VARCHAR"/>
        <result column="departId" property="departId" jdbcType="VARCHAR"/>
        <result column="position" property="position" jdbcType="INTEGER"/>
        <result column="deleteFlag" property="deleteFlag" jdbcType="INTEGER"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="leaveTime" property="leaveTime" jdbcType="TIMESTAMP"/>
        <result column="joinTime" property="joinTime" jdbcType="TIMESTAMP"/>

        <collection property="roleList" column="role_id" ofType="xyz.zaijushou.zhx.sys.entity.SysRoleEntity">
            <result column="roleId" property="id"  jdbcType="INTEGER"/>
            <result column="role" property="roleName"  jdbcType="VARCHAR"/>
        </collection>
    </resultMap>


    <select id="findPasswordInfoByLoginName" parameterType="xyz.zaijushou.zhx.sys.entity.SysUserEntity" resultType="xyz.zaijushou.zhx.sys.entity.SysUserEntity">
        select
        <include refid="colSqlPasswordInfo"/>
        from sys_user
        where delete_flag = '0'
        and enable = '1'
        and login_name = #{loginName}
    </select>

    <select id="selectPasswordInfoById" parameterType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity" resultType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity">
        select
        <include refid="colSqlPasswordInfo"/>
        from sys_user
        where delete_flag = '0'
        and id = #{id}
    </select>
    
    <select id="findUserInfoWithoutPasswordByLoginName" parameterType="xyz.zaijushou.zhx.sys.entity.SysUserEntity" resultType="xyz.zaijushou.zhx.sys.entity.SysUserEntity">
        select
        <include refid="colSqlWithoutPassword"/>
        from sys_user
        where delete_flag = '0'
        and enable = '1'
        and login_name = #{loginName}
    </select>

    <select id="findUserInfoWithoutPasswordById" parameterType="xyz.zaijushou.zhx.sys.entity.SysUserEntity" resultType="xyz.zaijushou.zhx.sys.entity.SysUserEntity">
        select
        <include refid="colSqlWithoutPassword"/>
        from sys_user
        where delete_flag = '0'
        and enable = '1'
        and id = #{id}
    </select>

    <select id="findUserInfoWithoutStatusById" parameterType="xyz.zaijushou.zhx.sys.entity.SysUserEntity" resultType="xyz.zaijushou.zhx.sys.entity.SysUserEntity">
        select
        <include refid="colSqlWithoutPassword"/>
        from sys_user
        where  id = #{id}
    </select>

    <select id="listAllUserRoles" parameterType="xyz.zaijushou.zhx.sys.entity.SysToUserRole" resultType="xyz.zaijushou.zhx.sys.entity.SysToUserRole">
        select
            user_id as 'user.id',
            role_id as 'role.id'
        from sys_user_role
        where delete_flag = '0'
    </select>

    <select id="listAllUserRolesByUserId" parameterType="xyz.zaijushou.zhx.sys.entity.SysToUserRole" resultType="xyz.zaijushou.zhx.sys.entity.SysToUserRole">
        select
        user_id as 'user.id',
        role_id as 'role.id'
        from sys_user_role
        where delete_flag = '0' and user_id = #{user.id}
    </select>

    <select id="listAllUsers" parameterType="xyz.zaijushou.zhx.sys.entity.SysUserEntity" resultType="xyz.zaijushou.zhx.sys.entity.SysUserEntity">
        select
        <include refid="colSqlWithoutPassword"/>
        from sys_user
        where delete_flag = '0'
    </select>

    <!--插入用户数据信息-->
    <insert id="saveUser"  parameterType="xyz.zaijushou.zhx.sys.entity.SysOperationUserEntity">
        INSERT INTO `sys_user`
        (`username`, `number`, `department`, `position`, `sex`,
        `high_edu`, `user_type`, `category`, `posi_title`, `come_resource`,
         `join_time`, `internship`, `plan_time`, `actual_time`, `credit_time`,
        `leave_time`, `yearly_salary`, `security_number`, `fund_number`, `benefit`,
         `deposit_bank`, `bank_number`, `idnumber`, `birth_time`, `marry_status`,
         `political`, `nation`, `birth_origin`, `household_address`, `household_nature`,
        `graduation`, `edu_background`, `work_experience`, `mobilization`, `mobile`,
        `office_phone`, `home_phone`, `qq`, `msn`, `email`,
         `address`, `login_name`, `password`, `remark`, `enable`,
        `create_time`, `delete_flag`, `status`)
        VALUES (
        #{username,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, #{departId,jdbcType=INTEGER}, #{position,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
        #{highEdu,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, #{posiTitle,jdbcType=VARCHAR}, #{comeResource,jdbcType=VARCHAR},
        #{joinTime,jdbcType=TIMESTAMP}, #{internship,jdbcType=INTEGER}, #{planTime,jdbcType=TIMESTAMP}, #{actualTime,jdbcType=TIMESTAMP}, #{creditTime,jdbcType=TIMESTAMP},
        #{leaveTime,jdbcType=TIMESTAMP}, #{yearlySalary,jdbcType=DECIMAL}, #{securityNumber,jdbcType=VARCHAR}, #{fundNumber,jdbcType=VARCHAR}, #{benefit,jdbcType=VARCHAR},
        #{depositBank,jdbcType=VARCHAR}, #{bankNumber,jdbcType=VARCHAR}, #{idnumber,jdbcType=VARCHAR}, #{birthTime,jdbcType=TIMESTAMP}, #{marryStatus,jdbcType=INTEGER},
        #{political,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, #{birthOrigin,jdbcType=VARCHAR}, #{householdAddress,jdbcType=VARCHAR}, #{householdNature,jdbcType=VARCHAR},
        #{graduation,jdbcType=VARCHAR}, #{eduBackground,jdbcType=VARCHAR}, #{workExperience,jdbcType=VARCHAR}, #{mobilization,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},

        #{officePhone,jdbcType=VARCHAR}, #{homePhone,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{msn,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
        #{address,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{enable,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
    </insert>

    <insert id="saveNewUser"  parameterType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity" useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" order="AFTER"  resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into data_collection
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null">username,</if>
            <if test="number != null">number,</if>
            <if test="departId != null">department,</if>
            <if test="sex != null">sex,</if>
            <if test="joinTime != null">join_time,</if>

            <if test="leaveTime != null">leave_time,</if>
            <if test="mobile != null">mobile,</if>
            <if test="officePhone != null">office_phone,</if>
            <if test="loginName != null">login_name,</if>
            <if test="password != null">password,</if>

            <if test="enable != null">enable,</if>
            <if test="status != null">status,</if>
            <if test="position != null">position,</if>
            <if test="loginNameCount != null">login_name_count,</if>
            delete_flag,
            create_time,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null">#{userName},</if>
            <if test="number != null">#{number},</if>
            <if test="departId != null">#{departId},</if>
            <if test="sex != null">#{sex},</if>
            <if test="joinTime != null">#{joinTime},</if>

            <if test="leaveTime != null">#{leaveTime},</if>
            <if test="mobile != null">#{mobile},</if>
            <if test="officePhone != null">#{officePhone},</if>
            <if test="loginName != null">#{loginName},</if>
            <if test="password != null">#{password},</if>

            <if test="enable != null">#{enable},</if>
            <if test="status != null">#{status},</if>
            <if test="position != null">#{position},</if>
            <if test="loginNameCount != null">#{loginNameCount},</if>
            0,
            now(),
        </trim>
    </insert>

    <!--更新用户数据信息-->
    <update id="updateUser" parameterType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity">
        update sys_user
        <set>
            <if test="mobile != null and mobile !=''">
                mobile = #{mobile},
            </if>

            <if test="userName != null and userName != ''">
                username = #{userName},
            </if>

            <if test="number != null and number != ''">
                number = #{number},
            </if>

            <if test="department != null and userName != ''">
                department = #{departId},
            </if>

            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>

            <if test="officePhone != null and officePhone != ''">
                office_phone = #{officePhone},
            </if>

            <if test="joinTime != null">
                join_time = #{joinTime,jdbcType=TIMESTAMP},
            </if>

            <if test="leaveTime != null">
                leave_time = #{leaveTime,jdbcType=TIMESTAMP},
            </if>

            <if test="position != null and position != ''">
                position = #{position},
            </if>

            <if test="status != null and status != ''">
                status = #{status},
            </if>

            <if test="enable != null ">
                enable = #{enable},
            </if>

        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--查询数据集合-->
    <select id="userDataList" parameterType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity" resultMap="UserResultMap">
        select
        su.id , su.mobile,su.number,su.sex,su.office_phone as officePhone,
        su.status,su.enable,su.username as userName,so.org_name department,
        su.create_time as createTime,su.create_user as 'createUser.id',
        su.update_user as 'updateUser.id',su.update_time as updateTime,
        su.delete_flag as deleteFlag,
        sr.role_name as role,
        su.leave_time as leaveTime,
        su.join_time as joinTime,
        su.department as departId,
        sr.id as roleId,
        su.position
        from
        (
        select * from sys_user where delete_flag = 0
        <if test="status != null ">
            AND  status = #{status,jdbcType=INTEGER}
        </if>
        <if test="department != null and department!=''">
            AND  department = #{department}
        </if>
        <if test="number != null and number!=''">
            AND  number like CONCAT('%',#{number},'%')
        </if>
        <if test="userName != null and userName!=''">
            AND  username like CONCAT('%',#{userName},'%')
        </if>
        order by ${orderBy} ${sort}
        limit ${pageNum},${pageSize}
        )su
        LEFT JOIN sys_user_role sur on su.id = sur.user_id
        LEFT JOIN sys_role sr on sur.role_id = sr.id
        LEFT JOIN sys_organization so on su.department = so.id
        where sur.delete_flag = 0
    </select>

    <select id="countUserData" parameterType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity" resultType="java.lang.Integer">
        select count(1) as sum
        from sys_user
        where delete_flag = 0
        <if test="status != null">
            AND  status = #{status,jdbcType=INTEGER}
        </if>
        <if test="department != null and department!=''">
            AND  department = #{department}
        </if>
        <if test="number != null and number!=''">
            AND  number like CONCAT('%',#{number},'%')
        </if>
        <if test="userName != null and userName!=''">
            AND  username like CONCAT('%',#{userName},'%')
        </if>
    </select>

    <!--根据Id查询数据-->
    <select id="getDataById" resultMap="UserResultMap">
           select
        su.id , su.mobile,su.number,su.sex,su.office_phone as officePhone,
        su.status,su.enable,su.username as userName,so.org_name department,
        su.create_time as createTime,su.create_user as 'createUser.id',
        su.update_user as 'updateUser.id',su.update_time as updateTime,
        su.delete_flag as deleteFlag,
        sr.role_name as role,
        su.leave_time as leaveTime,
        su.join_time as joinTime,
        su.department as departId,
        sr.id as roleId,
        su.position
        from sys_user su
        LEFT JOIN sys_user_role sur on su.id = sur.user_id
        LEFT JOIN sys_role sr on sur.role_id = sr.id
        LEFT JOIN sys_organization so on su.department = so.id
        where su.delete_flag = 0 and su.id = #{id,jdbcType=INTEGER}
    </select>

    <select id="getDataByRoleName" parameterType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity" resultType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity">
        select
        su.id , su.mobile,su.number,su.sex,su.office_phone as officePhone,
        su.status,su.enable,su.username as userName,
        su.create_time as createTime,su.create_user as 'createUser.id',
        su.update_user as 'updateUser.id',su.update_time as updateTime,
        su.delete_flag as deleteFlag,
        sr.role_name as role,
        su.leave_time as leaveTime
        from
        sys_user su LEFT JOIN sys_user_role sur on su.id = sur.user_id
        LEFT JOIN sys_role sr on sur.role_id = sr.id
        where su.delete_flag = 0
        <if test="role != null and role!=''">
            AND  sr.role_name = #{role}
        </if>
        <if test="userName != null and userName!=''">
            AND username like CONCAT('%',#{username},'%')
        </if>
    </select>

    <select id="getDataListByRoleName" parameterType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity" resultType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity">
        select
        DISTINCT  su.id , su.username as userName
        from
        sys_user su LEFT JOIN sys_user_role sur on su.id = sur.user_id
        LEFT JOIN sys_role sr on sur.role_id = sr.id
        where su.delete_flag = 0
        <if test="role != null and role!=''">
            AND  sr.role_name = #{role}
        </if>
    </select>

    <!--通过Id删除数据信息-->
    <delete id="deleteById" parameterType="java.lang.Integer">
        update sys_user set delete_flag =1
        where id = #{id}
    </delete>

    <!--更新员工状态-->
    <update id="updateDataStatus" parameterType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity">
        update sys_user
        <set>
            <if test="status != null">
                status = #{status},
            </if>

            <if test="enable != null">
                enable = #{enable},
            </if>

            <if test="leaveTime != null">
                leave_time = #{leaveTime},
            </if>

        </set>
        where id = #{id}
    </update>

    <select id="listUsers" parameterType="xyz.zaijushou.zhx.sys.entity.SysUserEntity" resultType="xyz.zaijushou.zhx.sys.entity.SysUserEntity">
        select
        <include refid="colSqlWithoutPassword"/>
        from sys_user
        where delete_flag = '0'
        <if test="userName != null and userName != ''">
            and username like concat('%', #{userName}, '%')
        </if>
    </select>

    <update id="passwordReset" parameterType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity">
        update sys_user
        set password = #{password}
        where id = #{id}
    </update>

    <update id="updateLoginFailTimes" parameterType="xyz.zaijushou.zhx.sys.entity.SysUserEntity">
        update sys_user
        set login_fail_times = #{loginFailTimes}
        where id = #{id}
    </update>

    <update id="updateLoginFailInfo" parameterType="xyz.zaijushou.zhx.sys.entity.SysUserEntity">
        update sys_user
        set login_fail_times = #{loginFailTimes},
            last_login_fail_time = #{lastLoginFailTime}
        where id = #{id}
    </update>
    
    <select id="countByLoginName" parameterType="xyz.zaijushou.zhx.sys.entity.SysUserEntity" resultType="java.lang.Integer">
          select login_name_count as loginNameCount from sys_user where login_name = #{loginName}
    </select>

    <select id="listByNameSet" parameterType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity" resultType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity">
        select
        <include refid="colSqlWithoutPassword"/>
        from sys_user
        where
        delete_flag = 0
         and username in
        <foreach collection="namesSet" open="(" close=")" separator="," item=",">
            #{item}
        </foreach>
    </select>

    <select id="listByDepartIdsSet" parameterType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity" resultType="xyz.zaijushou.zhx.sys.entity.SysNewUserEntity">
        select
        <include refid="colSqlWithoutPassword"/>
        from sys_user
        where
        delete_flag = 0
        and department in
        <foreach collection="departIdsSet" open="(" close=")" separator="," item=",">
            #{item}
        </foreach>
    </select>

</mapper>
